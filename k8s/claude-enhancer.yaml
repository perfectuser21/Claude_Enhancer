# =============================================================================
# Claude Enhancer Main Application Deployment
# Scalable and resilient deployment with health checks and monitoring
# =============================================================================

# Main Application Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-enhancer
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: application
    app.kubernetes.io/part-of: claude-enhancer
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: claude-enhancer
        app.kubernetes.io/component: application
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
      - name: db-migration
        image: ghcr.io/claude-enhancer/system:latest
        command: ["/bin/sh"]
        args:
        - -c
        - |
          echo "Running database migrations..."
          alembic upgrade head
          echo "Database migrations completed"
        envFrom:
        - configMapRef:
            name: claude-enhancer-config
        - secretRef:
            name: claude-enhancer-secrets
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      containers:
      - name: claude-enhancer
        image: ghcr.io/claude-enhancer/system:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        envFrom:
        - configMapRef:
            name: claude-enhancer-config
        - secretRef:
            name: claude-enhancer-secrets
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
        - name: uploads
          mountPath: /app/uploads
        - name: claude-config
          mountPath: /app/.claude
          readOnly: true
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      volumes:
      - name: app-logs
        emptyDir: {}
      - name: uploads
        persistentVolumeClaim:
          claimName: claude-enhancer-uploads-pvc
      - name: claude-config
        configMap:
          name: claude-enhancer-claude-config
      terminationGracePeriodSeconds: 30
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - claude-enhancer
              topologyKey: kubernetes.io/hostname

---
# Claude Enhancer Service
apiVersion: v1
kind: Service
metadata:
  name: claude-enhancer-service
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: application
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app.kubernetes.io/name: claude-enhancer
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
  sessionAffinity: None

---
# Horizontal Pod Autoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: claude-enhancer-hpa
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: autoscaling
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: claude-enhancer
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Min
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
      - type: Pods
        value: 4
        periodSeconds: 15
      selectPolicy: Max

---
# PersistentVolumeClaim for uploads
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: claude-enhancer-uploads-pvc
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: storage
spec:
  accessModes:
  - ReadWriteMany
  storageClassName: standard
  resources:
    requests:
      storage: 10Gi

---
# Pod Disruption Budget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: claude-enhancer-pdb
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: application
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer

---
# Network Policy for Security
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: claude-enhancer-network-policy
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: security
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: nginx
    ports:
    - protocol: TCP
      port: 8080
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: prometheus
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: postgres
    ports:
    - protocol: TCP
      port: 5432
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: redis
    ports:
    - protocol: TCP
      port: 6379
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80