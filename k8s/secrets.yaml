# =============================================================================
# Kubernetes Secrets Template for Perfect21 Claude Enhancer
# SECURITY WARNING: This is a TEMPLATE file with placeholder values
# 
# ⚠️  CRITICAL SECURITY NOTICE ⚠️
# 1. ALL base64 values below are PLACEHOLDER TEMPLATES
# 2. NEVER use these values in production
# 3. Replace with actual secrets using external secret management
# 4. Consider using sealed-secrets, external-secrets, or CSI drivers
# 
# To decode current placeholder values (FOR REFERENCE ONLY):
# echo "eW91ci1zdXBlci1zZWNyZXQta2V5" | base64 -d
# Result: "your-super-secret-key"
# =============================================================================

apiVersion: v1
kind: Secret
metadata:
  name: claude-enhancer-secrets
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: configuration
  annotations:
    kubernetes.io/description: "Template secrets - REPLACE ALL VALUES IN PRODUCTION"
type: Opaque
data:
  # Application secrets (TEMPLATE - base64 encoded placeholders)
  SECRET_KEY: eW91ci1zdXBlci1zZWNyZXQtYXBwbGljYXRpb24ta2V5LWNoYW5nZS10aGlzLWluLXByb2R1Y3Rpb24=

  # Database credentials (TEMPLATE)
  DB_PASSWORD: Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT04=
  DATABASE_URL: cG9zdGdyZXNxbCthc3luY3BnOi8vQ0hBTkdFLU1FLUlOLVBST0RVQ1RJT04=

  # Redis credentials (TEMPLATE)
  REDIS_PASSWORD: Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT04=
  REDIS_URL: cmVkaXM6Ly86Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT05AcmVkaXMtc2VydmljZTo2Mzc5LzA=

  # JWT secrets (TEMPLATE - MUST be 256+ bits in production)
  JWT_ACCESS_SECRET: Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT04tSldULUFDQ0VTUw==
  JWT_REFRESH_SECRET: Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT04tSldULVJFRlJFU0g=

  # External API keys (TEMPLATE)
  OPENAI_API_KEY: c2stQ0hBTkdFTUVJTlBST0RVQ1RJT04=
  ANTHROPIC_API_KEY: YW50aHJvcGljLUNIQU5HRU1FSU5QUk9EVUNUSU9O

  # Monitoring secrets (TEMPLATE)
  SENTRY_DSN: aHR0cHM6Ly9DSEFOR0VNRUlOUFJPRFVDVElPTg==
  DATADOG_API_KEY: Q0hBTkdFTUVJTlBST0RVQ1RJT04=

  # Email configuration (TEMPLATE)
  SMTP_PASSWORD: Q0hBTkdFTUVJTlBST0RVQ1RJT04=

---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database
  annotations:
    kubernetes.io/description: "Template database secrets - REPLACE IN PRODUCTION"
type: Opaque
data:
  POSTGRES_PASSWORD: Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT04=
  POSTGRES_USER: Y2xhdWRlX3VzZXI=
  POSTGRES_DB: Y2xhdWRlX2VuaGFuY2Vy

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
  annotations:
    kubernetes.io/description: "Template Redis secrets - REPLACE IN PRODUCTION"
type: Opaque
data:
  REDIS_PASSWORD: Q0hBTkdFLU1FLUlOLVBST0RVQ1RJT04=

---
# TLS Certificate Secret (TEMPLATE - replace with actual certificates)
apiVersion: v1
kind: Secret
metadata:
  name: claude-enhancer-tls
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: tls
  annotations:
    kubernetes.io/description: "Template TLS certificates - REPLACE WITH REAL CERTS"
type: kubernetes.io/tls
data:
  # TEMPLATE CERTIFICATES - REPLACE WITH REAL ONES
  # Generate with: openssl req -x509 -newkey rsa:4096 -keyout tls.key -out tls.crt -days 365 -nodes
  tls.crt: |
    VEVNUExBVEUtQ0VSVElGSUNBVEUtUkVQTEFDRS1XSVRILVJFQUwtQ0VSVFRJRKLBVEU=
  tls.key: |
    VEVNUExBVEUtUFJJVkFURV9LRVktUkVQTEFDRS1XSVRILVJFQUwtS0VZ

---
# =============================================================================
# PRODUCTION DEPLOYMENT GUIDE
# =============================================================================
# 
# For production deployment, consider using:
# 
# 1. External Secrets Operator:
#    kubectl apply -f https://raw.githubusercontent.com/external-secrets/external-secrets/main/deploy/crds/bundle.yaml
#    kubectl apply -f https://raw.githubusercontent.com/external-secrets/external-secrets/main/deploy/charts/external-secrets/templates/rbac.yaml
# 
# 2. Sealed Secrets:
#    kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.0/controller.yaml
# 
# 3. HashiCorp Vault CSI:
#    helm repo add hashicorp https://helm.releases.hashicorp.com
#    helm install vault hashicorp/vault
# 
# 4. AWS Secrets Manager CSI:
#    kubectl apply -f https://raw.githubusercontent.com/aws/secrets-store-csi-driver-provider-aws/main/deployment/aws-provider-installer.yaml
# 
# 5. Azure Key Vault CSI:
#    helm repo add csi-secrets-store https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts
#    helm install csi-secrets-store csi-secrets-store/secrets-store-csi-driver
# 
# =============================================================================
