# =============================================================================
# ConfigMap for Claude Enhancer Claude Enhancer
# Contains non-sensitive configuration data
# =============================================================================
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-enhancer-config
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/component: configuration
data:
  # Application Configuration
  CLAUDE_ENV: "production"
  DEBUG: "false"
  LOG_LEVEL: "INFO"
  API_VERSION: "v1"

  # Database Configuration
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  DB_NAME: "claude_enhancer"
  DB_USER: "claude_user"

  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"

  # JWT Configuration
  JWT_ACCESS_EXPIRE_MINUTES: "30"
  JWT_REFRESH_EXPIRE_DAYS: "7"

  # CORS Settings
  CORS_ORIGINS: "https://claude-enhancer.com,https://api.claude-enhancer.com"
  ALLOWED_HOSTS: "claude-enhancer.com,api.claude-enhancer.com"

  # Rate Limiting
  RATE_LIMIT_ENABLED: "true"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"

  # File Upload Settings
  MAX_UPLOAD_SIZE: "10485760"
  UPLOAD_PATH: "/app/uploads"
  ALLOWED_EXTENSIONS: "jpg,jpeg,png,gif,pdf,txt,md"

  # Cache Settings
  CACHE_TTL: "3600"
  CACHE_MAX_SIZE: "1000"

  # Feature Flags
  ENABLE_REGISTRATION: "true"
  ENABLE_PASSWORD_RESET: "true"
  ENABLE_TWO_FACTOR: "false"
  ENABLE_ANALYTICS: "true"

  # Monitoring
  PROMETHEUS_ENABLED: "true"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: nginx
    app.kubernetes.io/component: loadbalancer
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;

    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;

        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;

        # Security headers
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;

        # Upstream services
        upstream claude_enhancer {
            least_conn;
            server claude-enhancer-service:8080 max_fails=3 fail_timeout=30s;
        }

        upstream auth_service {
            least_conn;
            server auth-service:3000 max_fails=3 fail_timeout=30s;
        }

        # Main server block
        server {
            listen 80;
            listen [::]:80;
            server_name _;

            # Redirect to HTTPS
            return 301 https://$server_name$request_uri;
        }

        server {
            listen 443 ssl http2;
            listen [::]:443 ssl http2;
            server_name claude-enhancer.com www.claude-enhancer.com;

            # SSL Configuration
            ssl_certificate /etc/nginx/ssl/tls.crt;
            ssl_certificate_key /etc/nginx/ssl/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
            ssl_session_timeout 1d;
            ssl_session_cache shared:SSL:50m;
            ssl_stapling on;
            ssl_stapling_verify on;

            # Security
            client_max_body_size 10M;

            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }

            # API routes
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://claude_enhancer;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_connect_timeout 30s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }

            # Authentication routes
            location /auth/ {
                limit_req zone=auth burst=10 nodelay;
                proxy_pass http://auth_service;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            # Metrics endpoint (restricted)
            location /metrics {
                allow 10.0.0.0/8;
                allow 172.16.0.0/12;
                allow 192.168.0.0/16;
                deny all;
                proxy_pass http://claude_enhancer;
            }

            # Static files and frontend
            location / {
                try_files $uri $uri/ @fallback;
                expires 1h;
                add_header Cache-Control "public, immutable";
            }

            location @fallback {
                proxy_pass http://claude_enhancer;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
        }
    }