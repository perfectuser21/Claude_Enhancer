{
  "name": "session-restore",
  "description": "会话启动时恢复工作流状态和约束，确保继续使用子代理",
  "event": "SessionStart",
  "matcher": {},
  "action": "#!/bin/bash\nset -euo pipefail\n\n# 检查记忆文件\nMEMORY_FILE=\"eval/memory/workflow_context.json\"\nTIMESTAMP=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\n\necho \"[$TIMESTAMP] Restoring workflow context...\"\n\nif [[ ! -f \"$MEMORY_FILE\" ]]; then\n    echo \"ℹ️  首次启动或无保存的上下文，使用默认 VibePilot 配置\"\n    \n    # 创建默认提醒\n    cat <<EOF\n🚁 VibePilot Enhanced V2 Max 已启动！\n\n工作流约束已激活：\n✅ 必须使用子代理完成开发任务\n✅ 按顺序调用：spec-planner → developer-coder → test-runner → code-reviewer → commit-bot → coach-qa\n✅ 只有 developer-coder 可以编写代码\n✅ 每个子代理必须输出 SELF-EVAL\n✅ 质量门禁：必须生成 tests.json 和 review.md\n\n开始使用：\"请使用 VibePilot 工作流帮我实现 [功能描述]\"\nEOF\n    \n    exit 0\nfi\n\n# 读取保存的上下文\nSAVED_AT=$(jq -r '.saved_at' \"$MEMORY_FILE\")\nWORKFLOW_STATE=$(jq -r '.current_state' \"$MEMORY_FILE\")\nACTIVE_FEATURE=$(jq -r '.active_feature.name' \"$MEMORY_FILE\")\nFEATURE_STATUS=$(jq -r '.active_feature.status' \"$MEMORY_FILE\")\nLAST_COMPLETED=$(jq -r '.current_state.last_completed // \"none\"' \"$MEMORY_FILE\")\nWORKFLOW_NEXT=$(jq -r '.current_state.workflow_next // \"spec-planner\"' \"$MEMORY_FILE\")\n\necho \"📋 发现保存的工作流状态（保存时间：$SAVED_AT）\"\n\n# 恢复提醒信息\ncat <<EOF\n🔄 VibePilot 工作流状态恢复成功！\n\n当前状态：\n• 最后完成的子代理：$LAST_COMPLETED\n• 建议下一步：$WORKFLOW_NEXT\n• 活跃功能：${ACTIVE_FEATURE:-\"无\"} (${FEATURE_STATUS:-\"未知\"})\n\n🚁 工作流约束保持激活：\n✅ 必须按顺序使用子代理\n✅ 只有 developer-coder 编写代码  \n✅ 每步完成后生成证据文件\n✅ SELF-EVAL 格式必须包含\n\n继续工作流：\nEOF\n\nif [[ \"$LAST_COMPLETED\" == \"none\" || \"$LAST_COMPLETED\" == \"null\" ]]; then\n    echo \"• 开始新功能：'请用 spec-planner 分析需求：[描述]'\"\nelif [[ \"$WORKFLOW_NEXT\" == \"complete\" ]]; then\n    echo \"• 上个功能已完成，可开始新功能开发\"\nelse\n    case \"$WORKFLOW_NEXT\" in\n        \"developer-coder\")\n            echo \"• 需求已分析，建议：'调用 developer-coder 开始编码实现'\"\n            ;;\n        \"test-runner\")\n            echo \"• 代码已实现，建议：'调用 test-runner 执行测试验证'\"\n            ;;\n        \"code-reviewer\")\n            echo \"• 测试已通过，建议：'调用 code-reviewer 进行质量审查'\"\n            ;;\n        \"commit-bot\")\n            echo \"• 审查已通过，建议：'调用 commit-bot 提交代码'\"\n            ;;\n        \"coach-qa\")\n            echo \"• 代码已提交，可选：'调用 coach-qa 获取改进建议'\"\n            ;;\n        *)\n            echo \"• 继续之前的工作或开始新功能开发\"\n            ;;\n    esac\nfi\n\n# 记录恢复日志\necho \"[$TIMESTAMP] Session restored: last=$LAST_COMPLETED, next=$WORKFLOW_NEXT\" >> \"eval/logs/memory.log\"\n\nexit 0",
  "enabled": true,\  "timeout": 3000,\  "scope": "project"\}",
  "enabled": true,
  "timeout": 3000,
  "scope": "project"
}