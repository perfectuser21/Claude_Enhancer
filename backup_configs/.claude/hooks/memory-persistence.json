{
  "name": "memory-persistence",
  "description": "实现抗遗忘机制，在会话压缩前保存工作流状态，启动时恢复",
  "event": "PreCompact",
  "matcher": {},
  "action": "#!/bin/bash\nset -euo pipefail\n\n# 创建持久化目录\nmkdir -p eval/memory\nMEMORY_FILE=\"eval/memory/workflow_context.json\"\nTIMESTAMP=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\n\necho \"[$TIMESTAMP] Saving workflow context before compaction...\"\n\n# 获取当前上下文信息（如果可用）\nCONTEXT_DATA=$(echo \"$CLAUDE_CONTEXT\" | jq -r '.' 2>/dev/null || echo '{}')\n\n# 读取当前工作流状态\nWORKFLOW_STATE=\"{}\"\nif [[ -f \"eval/workflow_state/current.json\" ]]; then\n    WORKFLOW_STATE=$(cat \"eval/workflow_state/current.json\")\nfi\n\n# 检查当前活跃的功能开发\nCURRENT_FEATURE=\"\"\nFEATURE_STATUS=\"\"\nif [[ -d \"eval/markers\" ]]; then\n    CURRENT_FEATURE=$(find eval/markers -name \"*.active\" -exec basename {} .active \\; | head -1 || echo \"\")\n    if [[ -n \"$CURRENT_FEATURE\" ]]; then\n        FEATURE_STATUS=\"active\"\n    fi\nfi\n\n# 检查最近的 Git 提交\nRECENT_COMMITS=\"[]\"\nif command -v git >/dev/null 2>&1 && git rev-parse --git-dir >/dev/null 2>&1; then\n    RECENT_COMMITS=$(git log --oneline -5 --format='{\"hash\":\"%H\",\"message\":\"%s\",\"date\":\"%ai\"}' | jq -s '.' 2>/dev/null || echo \"[]\")\nfi\n\n# 创建完整的记忆快照\ncat > \"$MEMORY_FILE\" <<EOF\n{\n  \"saved_at\": \"$TIMESTAMP\",\n  \"session_type\": \"vibepilot_workflow\",\n  \"workflow_constraints\": {\n    \"must_use_subagents\": true,\n    \"sequence\": [\"spec-planner\", \"developer-coder\", \"test-runner\", \"code-reviewer\", \"commit-bot\", \"coach-qa\"],\n    \"developer_coder_only_writes\": true,\n    \"evidence_required\": [\"tests.json\", \"review.md\"],\n    \"self_eval_mandatory\": true\n  },\n  \"current_state\": $WORKFLOW_STATE,\n  \"active_feature\": {\n    \"name\": \"$CURRENT_FEATURE\",\n    \"status\": \"$FEATURE_STATUS\"\n  },\n  \"project_context\": {\n    \"type\": \"VibePilot Enhanced V2 Max\",\n    \"directory\": \"$(pwd)\",\n    \"recent_commits\": $RECENT_COMMITS\n  },\n  \"session_context\": $CONTEXT_DATA\n}\nEOF\n\necho \"✅ 工作流上下文已保存到 $MEMORY_FILE\"\necho \"📋 保存内容：工作流约束、当前状态、活跃功能、项目上下文\"\n\n# 记录保存日志\necho \"[$TIMESTAMP] Workflow context saved successfully\" >> \"eval/logs/memory.log\"\n\nexit 0",
  "enabled": true,
  "timeout": 5000,
  "scope": "project"
}