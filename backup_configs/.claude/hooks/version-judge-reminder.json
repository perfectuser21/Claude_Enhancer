{
  "name": "version-judge-reminder",
  "description": "版本判定提醒 - 在代码变更后提醒进行版本判定",
  "event": "PostToolUse",
  "matcher": {
    "tool": ["Edit", "Write", "MultiEdit"],
    "file_extension": [".py", ".js", ".ts", ".yaml", ".json", ".sh"]
  },
  "action": "#!/bin/bash\nset -euo pipefail\n\n# 版本判定提醒脚本\nPROJECT_ROOT=\"$(pwd)\"\nVERSION_JUDGE_SCRIPT=\"$PROJECT_ROOT/scripts/version-judge.sh\"\nLOG_FILE=\"$PROJECT_ROOT/eval/logs/version_reminders.log\"\nTIMESTAMP=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\n\n# 创建日志目录\nmkdir -p \"$(dirname \"$LOG_FILE\")\"\n\n# 获取工具和文件信息\nTOOL_TYPE=$(echo \"$CLAUDE_TOOL_INPUT\" | jq -r '.tool_name // \"unknown\"')\nFILE_PATH=$(echo \"$CLAUDE_TOOL_INPUT\" | jq -r '.file_path // \"\"')\n\necho \"[$TIMESTAMP] Code change detected: $TOOL_TYPE on $FILE_PATH\" >> \"$LOG_FILE\"\n\n# 检查是否是有意义的代码变更\nif [[ -z \"$FILE_PATH\" ]]; then\n    echo \"[$TIMESTAMP] No file path, skipping reminder\" >> \"$LOG_FILE\"\n    exit 0\nfi\n\n# 检查文件类型是否需要版本判定\nSIGNIFICANT_PATTERNS=(\n    \"modules/\"\n    \"main/\"\n    \"scripts/\"\n    \".claude/\"\n    \"config/\"\n)\n\nIS_SIGNIFICANT=false\nfor pattern in \"${SIGNIFICANT_PATTERNS[@]}\"; do\n    if [[ \"$FILE_PATH\" == *\"$pattern\"* ]]; then\n        IS_SIGNIFICANT=true\n        break\n    fi\ndone\n\nif [[ \"$IS_SIGNIFICANT\" == \"false\" ]]; then\n    echo \"[$TIMESTAMP] File not significant for versioning: $FILE_PATH\" >> \"$LOG_FILE\"\n    exit 0\nfi\n\n# 检查版本判定脚本是否存在\nif [[ ! -f \"$VERSION_JUDGE_SCRIPT\" ]]; then\n    echo \"[$TIMESTAMP] Version judge script not found: $VERSION_JUDGE_SCRIPT\" >> \"$LOG_FILE\"\n    echo \"⚠️  版本判定脚本未找到，无法提供版本建议\"\n    exit 0\nfi\n\n# 检查最近是否已经提醒过（避免频繁提醒）\nREMINDER_MARKER=\"$PROJECT_ROOT/.vibepilot/last_reminder\"\nif [[ -f \"$REMINDER_MARKER\" ]]; then\n    LAST_REMINDER=$(cat \"$REMINDER_MARKER\")\n    CURRENT_TIME=$(date +%s)\n    # 如果距离上次提醒不到 10 分钟，跳过\n    if [[ $((CURRENT_TIME - LAST_REMINDER)) -lt 600 ]]; then\n        echo \"[$TIMESTAMP] Recently reminded, skipping\" >> \"$LOG_FILE\"\n        exit 0\n    fi\nfi\n\n# 记录提醒时间\ndate +%s > \"$REMINDER_MARKER\"\n\n# 显示版本判定提醒\necho \"\"\necho \"💡 版本判定提醒\"\necho \"================\"\necho \"检测到重要文件变更: $FILE_PATH\"\necho \"\"\necho \"建议操作:\"\necho \"  1. 运行版本判定向导: ./scripts/version-judge.sh\"\necho \"  2. 或手动升级版本: ./scripts/bump-version.sh [patch|iteration|milestone]\"\necho \"  3. 查看当前版本: cat .vibepilot/VERSION\"\necho \"\"\necho \"三级版本规范:\"\necho \"  🔖 Patch (微调):     代码逻辑微调、Bug修复\"\necho \"  📌 Iteration (迭代): 功能模块更新、局部重构\"\necho \"  🚨 Milestone (升级): 架构重构、重大变更\"\n\n# 记录提醒日志\necho \"[$TIMESTAMP] REMINDER: Suggested version check for $FILE_PATH\" >> \"$LOG_FILE\"\n\nexit 0",
  "enabled": true,
  "timeout": 5000,
  "scope": "project"
}