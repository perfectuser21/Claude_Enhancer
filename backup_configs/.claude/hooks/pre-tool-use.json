{
  "name": "security-guard",
  "description": "安全防护钩子 - 拦截危险命令和敏感文件操作，记录所有拦截行为",
  "event": "PreToolUse",
  "matcher": {
    "tool": ["Bash", "Edit", "Write", "MultiEdit"]
  },
  "action": "#!/bin/bash\nset -euo pipefail\n\n# 获取工具类型和参数\nTOOL_TYPE=$(echo \"$CLAUDE_TOOL_INPUT\" | jq -r '.tool_name // \"unknown\"')\nCOMMAND=$(echo \"$CLAUDE_TOOL_INPUT\" | jq -r '.command // \"\"')\nFILE_PATH=$(echo \"$CLAUDE_TOOL_INPUT\" | jq -r '.file_path // \"\"')\n\n# 创建日志目录和文件\nmkdir -p eval/logs\nLOG_FILE=\"eval/logs/hook_denies.log\"\nTIMESTAMP=$(date -u +\"%Y-%m-%dT%H:%M:%SZ\")\n\n# 定义危险命令模式\nDANGEROUS_PATTERNS=(\n    \"rm -rf\"\n    \"sudo \"\n    \"chmod 777\"\n    \"chown \"\n    \"dd \"\n    \"mkfs\"\n    \"fdisk\"\n    \"format\"\n    \"del /s\"\n    \"rmdir /s\"\n    \"shutdown\"\n    \"reboot\"\n    \"killall\"\n    \"pkill -9\"\n    \":(){ :|:& };:\"\n    \"wget.*|.*sh\"\n    \"curl.*|.*sh\"\n)\n\n# 定义敏感文件模式\nSENSITIVE_PATTERNS=(\n    \"*.env\"\n    \"*/.env*\"\n    \"*/keys/*\"\n    \"*/secrets/*\"\n    \"*/deploy/*\"\n    \"*.key\"\n    \"*.pem\"\n    \"*.crt\"\n    \"*password*\"\n    \"*secret*\"\n    \"*token*\"\n    \"*/etc/passwd\"\n    \"*/etc/shadow\"\n    \"*/etc/hosts\"\n    \"*/.ssh/*\"\n    \"*/config/production*\"\n    \"*/config/prod*\"\n)\n\n# 检查危险命令\nif [[ \"$TOOL_TYPE\" == \"Bash\" && -n \"$COMMAND\" ]]; then\n    for pattern in \"${DANGEROUS_PATTERNS[@]}\"; do\n        if echo \"$COMMAND\" | grep -q \"$pattern\"; then\n            echo \"[$TIMESTAMP] BLOCKED: Dangerous command blocked: $COMMAND\" >> \"$LOG_FILE\"\n            echo \"🚨 安全拦截：检测到危险命令 '$pattern'，已阻止执行\"\n            echo \"命令内容：$COMMAND\"\n            echo \"如需执行此操作，请手动确认安全性后执行。\"\n            exit 1\n        fi\n    done\nfi\n\n# 检查敏感文件操作\nif [[ \"$TOOL_TYPE\" =~ ^(Edit|Write|MultiEdit)$ && -n \"$FILE_PATH\" ]]; then\n    for pattern in \"${SENSITIVE_PATTERNS[@]}\"; do\n        # 使用简单的通配符匹配\n        if [[ \"$FILE_PATH\" == $pattern ]]; then\n            echo \"[$TIMESTAMP] BLOCKED: Sensitive file access blocked: $FILE_PATH\" >> \"$LOG_FILE\"\n            echo \"🚨 安全拦截：检测到敏感文件操作 '$FILE_PATH'，已阻止执行\"\n            echo \"文件匹配模式：$pattern\"\n            echo \"如需修改此文件，请确认操作安全性并手动执行。\"\n            exit 1\n        fi\n    done\nfi\n\n# 特殊检查：大批量文件删除\nif [[ \"$TOOL_TYPE\" == \"Bash\" && \"$COMMAND\" =~ find.*-delete ]]; then\n    echo \"[$TIMESTAMP] BLOCKED: Bulk file deletion blocked: $COMMAND\" >> \"$LOG_FILE\"\n    echo \"🚨 安全拦截：检测到批量文件删除操作，已阻止执行\"\n    echo \"命令内容：$COMMAND\"\n    exit 1\nfi\n\n# 检查系统重要目录\nIMPORTANT_DIRS=(\n    \"/etc\"\n    \"/usr\"\n    \"/var\"\n    \"/opt\"\n    \"/boot\"\n    \"/home\"\n    \"/root\"\n)\n\nif [[ \"$TOOL_TYPE\" == \"Bash\" ]]; then\n    for dir in \"${IMPORTANT_DIRS[@]}\"; do\n        if echo \"$COMMAND\" | grep -q \"rm.*$dir\"; then\n            echo \"[$TIMESTAMP] BLOCKED: System directory deletion blocked: $COMMAND\" >> \"$LOG_FILE\"\n            echo \"🚨 安全拦截：检测到系统重要目录删除操作，已阻止执行\"\n            echo \"目标目录：$dir\"\n            exit 1\n        fi\n    done\nfi\n\n# 记录允许的操作（用于统计）\necho \"[$TIMESTAMP] ALLOWED: $TOOL_TYPE - ${COMMAND:-$FILE_PATH}\" >> \"eval/logs/hook_allows.log\"\n\n# 操作被允许\necho \"✅ 安全检查通过，操作已授权执行\"\nexit 0",
  "enabled": true,
  "timeout": 10000,
  "scope": "project"
}