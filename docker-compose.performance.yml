# Claude Enhancer Performance Optimization Stack
# Docker Compose配置 - 完整的性能优化基础设施

version: '3.8'

services:
  # Redis缓存服务
  redis:
    image: redis:7-alpine
    container_name: perfect21-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
      - ./config/redis.conf:/usr/local/etc/redis/redis.conf:ro
    networks:
      - performance_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # PostgreSQL数据库
  postgres:
    image: postgres:15-alpine
    container_name: perfect21-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: perfect21
      POSTGRES_USER: perfect21
      POSTGRES_PASSWORD: perfect21_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./config/postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - performance_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U perfect21 -d perfect21"]
      interval: 10s
      timeout: 5s
      retries: 5

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: perfect21-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: perfect21
      RABBITMQ_DEFAULT_PASS: perfect21_pass
      RABBITMQ_DEFAULT_VHOST: perfect21
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    networks:
      - performance_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Prometheus监控
  prometheus:
    image: prom/prometheus:latest
    container_name: perfect21-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.retention.time=30d'
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - performance_network
    depends_on:
      - perfect21-app

  # Grafana可视化
  grafana:
    image: grafana/grafana:latest
    container_name: perfect21-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./config/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./config/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - performance_network
    depends_on:
      - prometheus

  # Jaeger分布式追踪
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: perfect21-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
      - "6831:6831/udp"
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    volumes:
      - jaeger_data:/badger
    networks:
      - performance_network

  # Claude Enhancer应用服务
  perfect21-app:
    build:
      context: .
      dockerfile: Dockerfile.performance
    container_name: perfect21-app
    restart: unless-stopped
    ports:
      - "8080:8080"  # 主应用
      - "8000:8000"  # 性能仪表板
    environment:
      # 数据库配置
      DATABASE_URL: "postgresql://perfect21:perfect21_pass@postgres:5432/perfect21"

      # Redis配置
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ""

      # RabbitMQ配置
      RABBITMQ_URL: "amqp://perfect21:perfect21_pass@rabbitmq:5672/perfect21"

      # Jaeger配置
      JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"

      # 性能配置
      PERFORMANCE_CONFIG_FILE: "/app/performance.yaml"
      ENVIRONMENT: "production"
      LOG_LEVEL: "INFO"

      # 应用配置
      SERVICE_NAME: "perfect21"
      DEBUG_MODE: "false"
      WORKERS: 4
    volumes:
      - ./performance.yaml:/app/performance.yaml:ro
      - ./logs:/app/logs
      - metrics_data:/app/metrics
    networks:
      - performance_network
    depends_on:
      - redis
      - postgres
      - rabbitmq
      - jaeger
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # HAProxy负载均衡器
  haproxy:
    image: haproxy:latest
    container_name: perfect21-haproxy
    restart: unless-stopped
    ports:
      - "80:80"
      - "8404:8404"  # 统计页面
    volumes:
      - ./config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    networks:
      - performance_network
    depends_on:
      - perfect21-app

  # Nginx反向代理（可选）
  nginx:
    image: nginx:alpine
    container_name: perfect21-nginx
    restart: unless-stopped
    ports:
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    networks:
      - performance_network
    depends_on:
      - haproxy

  # Node Exporter (系统指标)
  node-exporter:
    image: prom/node-exporter:latest
    container_name: perfect21-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - performance_network

  # Redis Exporter (Redis指标)
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: perfect21-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      REDIS_ADDR: "redis://redis:6379"
    networks:
      - performance_network
    depends_on:
      - redis

  # Postgres Exporter (数据库指标)
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: perfect21-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://perfect21:perfect21_pass@postgres:5432/perfect21?sslmode=disable"
    networks:
      - performance_network
    depends_on:
      - postgres

networks:
  performance_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  jaeger_data:
    driver: local
  metrics_data:
    driver: local

# 健康检查和监控配置
x-healthcheck: &default-healthcheck
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

# 重启策略配置
x-restart-policy: &default-restart
  restart: unless-stopped

# 日志配置
x-logging: &default-logging
  logging:
    driver: "json-file"
    options:
      max-size: "10m"
      max-file: "3"