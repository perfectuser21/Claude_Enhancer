{
  "version": "8.1.0",
  "project": "Claude Enhancer",
  "description": "四层架构分层系统 + 自愈系统 + 工作流强制执行 + Dual-Language Checklist System + Workflow Interference Fix",
  "permissions": {
    "defaultMode": "bypassPermissions",
    "allow": [
      "Bash",
      "Read",
      "Write",
      "Edit",
      "Glob",
      "Grep",
      "Task",
      "TodoWrite",
      "WebSearch",
      "WebFetch",
      "NotebookEdit",
      "KillShell",
      "BashOutput",
      "SlashCommand"
    ]
  },
  "hooks": {
    "UserPromptSubmit": [
      ".claude/hooks/requirement_clarification.sh",
      ".claude/hooks/workflow_auto_start.sh"
    ],
    "PrePrompt": [
      ".claude/hooks/force_branch_check.sh",
      ".claude/hooks/ai_behavior_monitor.sh",
      ".claude/hooks/workflow_enforcer.sh",
      ".claude/hooks/phase2_5_autonomous.sh",
      ".claude/hooks/smart_agent_selector.sh",
      ".claude/hooks/gap_scan.sh",
      ".claude/hooks/impact_assessment_enforcer.sh"
    ],
    "PreToolUse": [
      ".claude/hooks/task_branch_enforcer.sh",
      ".claude/hooks/branch_helper.sh",
      ".claude/hooks/code_writing_check.sh",
      ".claude/hooks/agent_usage_enforcer.sh",
      ".claude/hooks/quality_gate.sh",
      ".claude/hooks/auto_cleanup_check.sh",
      ".claude/hooks/concurrent_optimizer.sh"
    ],
    "PostToolUse": [
      {
        "name": "checklist_generator",
        "path": ".claude/hooks/checklist_generator.sh",
        "trigger": "phase1.3_complete",
        "description": "Generate dual-language checklists after Phase 1.3",
        "optional": true
      },
      {
        "name": "validate_checklist_mapping",
        "path": ".claude/hooks/validate_checklist_mapping.sh",
        "trigger": "pre_phase2",
        "description": "Validate checklist mapping before Phase 2",
        "optional": false
      },
      {
        "name": "acceptance_report_generator",
        "path": ".claude/hooks/acceptance_report_generator.sh",
        "trigger": "phase6_start",
        "description": "Generate acceptance report in Phase 6",
        "optional": true
      },
      ".claude/hooks/merge_confirmer.sh",
      ".claude/hooks/unified_post_processor.sh",
      ".claude/hooks/agent_error_recovery.sh",
      ".claude/hooks/phase_completion_validator.sh",
      ".claude/hooks/telemetry_logger.sh"
    ]
  },
  "skills": [
    {
      "name": "checklist-validator",
      "description": "Validates checklist items have evidence before marking complete",
      "trigger": {
        "event": "before_tool_use",
        "tool": [
          "Write",
          "Edit"
        ],
        "pattern": "CHECKLIST.*\\.md$"
      },
      "action": {
        "script": "scripts/evidence/validate_checklist.sh",
        "args": [
          "{{file_path}}"
        ]
      },
      "enabled": true
    },
    {
      "name": "learning-capturer",
      "description": "Captures errors and lessons learned during phase transitions",
      "trigger": {
        "event": "on_error",
        "context": "phase_transition"
      },
      "action": {
        "script": "scripts/learning/capture.sh",
        "args": [
          "error",
          "{{error_message}}",
          "{{context}}"
        ]
      },
      "enabled": true
    },
    {
      "name": "evidence-collector",
      "description": "Reminds AI to collect evidence after completing tasks",
      "trigger": {
        "event": "after_tool_use",
        "tool": [
          "Bash"
        ],
        "pattern": "(test|check|validate)"
      },
      "action": {
        "type": "reminder",
        "message": "Remember to collect evidence for this test result using scripts/evidence/collect.sh"
      },
      "enabled": true
    },
    {
      "name": "kpi-reporter",
      "description": "Generates KPI report at phase transitions",
      "trigger": {
        "event": "phase_transition",
        "phases": [
          "Phase4",
          "Phase5",
          "Phase7"
        ]
      },
      "action": {
        "script": "scripts/kpi/weekly_report.sh",
        "args": [
          "--auto"
        ]
      },
      "enabled": false
    }
  ]
}
