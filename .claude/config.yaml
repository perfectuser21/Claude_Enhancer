# Claude Enhancer - Unified Configuration System
# Single source of truth for all configuration
# Replaces 38+ scattered configuration files

metadata:
  version: "3.0.0"
  name: "Claude Enhancer Unified Configuration"
  description: "Complete unified configuration system with 8-Phase workflow and intelligent agent selection"
  last_updated: "2025-09-23"
  schema_version: "3.0"
  migrated_from:
    - ".claude/settings.json"
    - ".claude/config/main.yaml"
    - ".claude/config/unified_main.yaml"
    - ".claude/config-archive/*.json"
    - ".claude/smart_loading_config.yaml"

# Core System Configuration
system:
  name: "Claude Enhancer"
  mode: "enforcement"  # advisory | warning | enforcement
  version: "4.0.0"
  description: "AI-powered development workflow with intelligent quality gates"
  debug: false
  environment: "production"

# 8-Phase Workflow Configuration
workflow:
  enabled: true
  description: "Complete development lifecycle from branch creation to deployment"
  current_phase: 0  # Auto-tracked

  phases:
    phase_0:
      name: "Git Branch Creation"
      description: "Create feature branch and setup workspace"
      hooks: ["branch_helper"]
      required: true
      auto_trigger: true
      estimated_duration: "1-2 minutes"

    phase_1:
      name: "Requirements Analysis"
      description: "Analyze and document requirements"
      agents_min: 3
      agents_max: 5
      required: true
      quality_checks: ["requirement_completeness", "stakeholder_validation"]
      estimated_duration: "5-10 minutes"

    phase_2:
      name: "Design Planning"
      description: "System design and architecture planning"
      agents_min: 4
      agents_max: 6
      required: true
      quality_checks: ["design_review", "architecture_validation", "security_review"]
      estimated_duration: "10-15 minutes"

    phase_3:
      name: "Implementation Development"
      description: "Code implementation with intelligent agent strategy"
      agents_min: 4
      agents_max: 8
      strategy: "4-6-8"  # Simple-Standard-Complex task detection
      execution_mode: "parallel"
      required: true
      quality_checks: ["code_quality", "security_scan", "architecture_compliance"]
      estimated_duration: "15-30 minutes"

    phase_4:
      name: "Local Testing"
      description: "Comprehensive testing and validation"
      agents_min: 3
      agents_max: 5
      required: true
      quality_checks: ["test_coverage", "performance_test", "integration_test"]
      estimated_duration: "10-20 minutes"

    phase_5:
      name: "Code Commit"
      description: "Git commit with automated quality gates"
      hooks: ["pre-commit", "commit-msg"]
      quality_gates: true
      required: true
      auto_cleanup: true
      estimated_duration: "2-5 minutes"

    phase_6:
      name: "Code Review"
      description: "Pull request creation and automated review"
      hooks: ["pre-push"]
      required: true
      automated_checks: true
      estimated_duration: "5-10 minutes"

    phase_7:
      name: "Merge & Deploy"
      description: "Final merge and deployment"
      required: true
      deployment_validation: true
      estimated_duration: "5-15 minutes"

# Agent Configuration - 4-6-8 Intelligent Strategy
agents:
  strategy:
    simple_tasks:
      agent_count: 4
      duration: "5-10 minutes"
      description: "Basic development tasks, bug fixes, simple features"
      complexity_threshold: 25
      triggers: ["bug", "fix", "simple", "small", "minor"]

    standard_tasks:
      agent_count: 6
      duration: "15-20 minutes"
      description: "Regular feature development, API creation, standard workflows"
      complexity_threshold: 65
      triggers: ["feature", "api", "component", "service", "module"]

    complex_tasks:
      agent_count: 8
      duration: "25-30 minutes"
      description: "Complex system implementations, architecture changes, full-stack development"
      complexity_threshold: 100
      triggers: ["architecture", "system", "complex", "fullstack", "infrastructure"]

  execution:
    mode: "parallel"  # parallel | sequential | mixed
    enforce_parallel: true
    warn_sequential: true
    block_on_violation: true
    timeout: 30000  # milliseconds
    max_retries: 3
    backoff_strategy: "exponential"

  selection:
    auto_detect_task: true
    suggest_combinations: true
    enforce_minimum: true
    show_recommendations: true
    dynamic_selection: true
    intelligent_matching: true

  validation:
    min_agents: 3
    max_agents: 10
    require_role_diversity: true
    prevent_duplicate_roles: true
    validate_task_alignment: true

# Comprehensive Task Type Definitions
task_types:
  # Authentication & Security
  authentication:
    keywords: ["登录", "认证", "auth", "jwt", "oauth", "用户", "权限", "security", "身份验证", "授权", "登录系统", "用户认证"]
    required_agents: ["backend-architect", "security-auditor", "test-engineer", "api-designer", "database-specialist"]
    recommended_agents: ["compliance-officer", "infrastructure-engineer", "frontend-specialist"]
    minimum_count: 5
    complexity: "standard"
    security_level: "high"
    priority: "high"
    test_requirements: ["security_tests", "penetration_tests", "auth_flow_tests", "session_tests"]
    compliance_requirements: ["gdpr", "oauth2", "security_audit", "privacy_policy"]

  # API Development
  api_development:
    keywords: ["api", "接口", "rest", "graphql", "endpoint", "route", "服务", "swagger", "openapi", "微服务"]
    required_agents: ["api-designer", "backend-architect", "test-engineer", "technical-writer"]
    recommended_agents: ["performance-engineer", "security-auditor", "database-specialist"]
    minimum_count: 4
    complexity: "simple"
    priority: "medium"
    test_requirements: ["api_tests", "contract_tests", "load_tests", "integration_tests"]
    documentation_required: true

  # Database Design
  database_design:
    keywords: ["数据库", "database", "schema", "sql", "mongodb", "redis", "表", "table", "migration", "数据模型"]
    required_agents: ["database-specialist", "backend-architect", "performance-engineer"]
    recommended_agents: ["security-auditor", "data-architect", "test-engineer"]
    minimum_count: 3
    complexity: "simple"
    priority: "high"
    test_requirements: ["migration_tests", "performance_tests", "data_integrity_tests"]

  # Frontend Development
  frontend_development:
    keywords: ["前端", "frontend", "react", "vue", "ui", "界面", "组件", "页面", "angular", "svelte", "用户界面"]
    required_agents: ["frontend-specialist", "ux-designer", "test-engineer", "accessibility-auditor"]
    recommended_agents: ["performance-engineer", "react-pro", "security-auditor"]
    minimum_count: 4
    complexity: "standard"
    priority: "medium"
    test_requirements: ["unit_tests", "e2e_tests", "accessibility_tests", "visual_regression_tests"]

  # Full-stack Development
  fullstack:
    keywords: ["全栈", "fullstack", "应用", "application", "系统", "平台", "web应用", "完整系统"]
    required_agents: ["fullstack-engineer", "backend-architect", "frontend-specialist", "database-specialist", "test-engineer", "devops-engineer"]
    recommended_agents: ["security-auditor", "performance-engineer", "ux-designer"]
    minimum_count: 6
    complexity: "complex"
    priority: "high"
    test_requirements: ["integration_tests", "e2e_tests", "performance_tests", "security_tests"]

  # Configuration Management
  configuration:
    keywords: ["配置", "config", "设置", "settings", "environment", "环境", "deployment", "部署", "配置管理"]
    required_agents: ["backend-architect", "infrastructure-engineer", "devops-engineer", "system-architect", "technical-writer", "security-auditor"]
    recommended_agents: ["compliance-officer", "performance-engineer"]
    minimum_count: 6
    complexity: "standard"
    priority: "high"
    test_requirements: ["config_validation", "deployment_tests", "rollback_tests"]

  # Performance Optimization
  performance:
    keywords: ["性能", "performance", "优化", "optimize", "缓存", "cache", "速度", "负载", "性能调优"]
    required_agents: ["performance-engineer", "backend-architect", "database-specialist", "test-engineer"]
    recommended_agents: ["infrastructure-engineer", "monitoring-specialist", "frontend-specialist"]
    minimum_count: 4
    complexity: "standard"
    priority: "medium"
    test_requirements: ["load_tests", "stress_tests", "benchmark_tests", "profiling"]

  # DevOps & Infrastructure
  devops:
    keywords: ["devops", "部署", "deployment", "docker", "kubernetes", "ci/cd", "pipeline", "基础设施"]
    required_agents: ["devops-engineer", "infrastructure-engineer", "system-architect", "security-auditor"]
    recommended_agents: ["monitoring-specialist", "backend-architect", "test-engineer"]
    minimum_count: 4
    complexity: "standard"
    priority: "high"
    test_requirements: ["deployment_tests", "infrastructure_tests", "security_scan"]

  # Testing & Quality Assurance
  testing:
    keywords: ["测试", "test", "jest", "pytest", "e2e", "单元测试", "集成测试", "quality", "coverage", "qa"]
    required_agents: ["test-engineer", "e2e-test-specialist", "performance-tester", "security-auditor"]
    recommended_agents: ["automation-engineer", "code-reviewer", "quality-analyst"]
    minimum_count: 4
    complexity: "standard"
    priority: "medium"
    test_requirements: ["test_coverage", "test_automation", "test_reporting"]

  # General Development
  general:
    keywords: ["开发", "development", "功能", "feature", "修复", "fix", "实现", "implement"]
    required_agents: ["backend-architect", "test-engineer", "technical-writer"]
    recommended_agents: ["frontend-specialist", "security-auditor"]
    minimum_count: 3
    complexity: "simple"
    priority: "low"

# Hook Configuration System
hooks:
  enabled: true
  enforcement_level: "strict"  # advisory | warning | strict
  version: "3.0"
  timeout_default: 5000

  # Pre-tool use hooks (Phase 0-3)
  pre_tool_use:
    - name: "smart_agent_selector"
      command: "bash .claude/hooks/smart_agent_selector.sh"
      description: "Intelligent agent selection using 4-6-8 strategy"
      timeout: 5000
      matcher: "Task"
      enabled: true
      strict: true
      phases: [1, 2, 3]

    - name: "task_analyzer"
      command: "bash .claude/hooks/task_analyzer.sh"
      description: "Analyze task complexity and recommend optimal agent configuration"
      timeout: 3000
      enabled: true
      phases: [1, 2, 3]

  # User prompt submit hooks (Phase 0)
  user_prompt_submit:
    - name: "branch_helper"
      command: "bash .claude/hooks/branch_helper.sh"
      description: "Git branch creation and workflow initialization"
      timeout: 2000
      enabled: true
      phase: [0]

    - name: "workflow_tracker"
      command: "bash .claude/hooks/workflow_tracker.sh"
      description: "Track 8-phase workflow progress"
      timeout: 2000
      enabled: true
      phases: [0, 1, 2, 3, 4, 5, 6, 7]

  # Post-tool use hooks (Phase 4-7)
  post_tool_use:
    - name: "quality_validator"
      command: "bash .claude/hooks/quality_validator.sh"
      description: "Comprehensive quality validation and reporting"
      timeout: 10000
      enabled: true
      phases: [3, 4, 5]

    - name: "phase_completer"
      command: "bash .claude/hooks/phase_completer.sh"
      description: "Mark phase completion and trigger next phase"
      timeout: 3000
      enabled: true
      phases: [1, 2, 3, 4, 5, 6, 7]

# Quality Gates System
quality_gates:
  enabled: true
  strict_mode: true
  version: "3.0"
  auto_fix: true

  checks:
    - name: "agent_count_validation"
      description: "Verify minimum agent count based on task complexity"
      blocking: true
      phases: [1, 2, 3, 4]
      thresholds:
        simple: 3
        standard: 4
        complex: 6
      auto_suggest: true

    - name: "parallel_execution_check"
      description: "Ensure parallel agent execution for optimal performance"
      blocking: false  # warning only
      phases: [3]
      auto_fix: true

    - name: "task_type_validation"
      description: "Validate agent selection matches task requirements"
      blocking: true
      phases: [1, 2, 3]
      confidence_threshold: 0.8

    - name: "code_quality_check"
      description: "Code quality, style, and best practices validation"
      blocking: true
      phases: [5]
      tools: ["eslint", "pylint", "sonarqube", "prettier", "black"]
      thresholds:
        complexity: 10
        duplication: 3

    - name: "test_coverage_check"
      description: "Ensure adequate test coverage"
      blocking: true
      phases: [4, 5]
      minimum_coverage: 80
      critical_paths_coverage: 95

    - name: "security_audit"
      description: "Security vulnerability scanning and compliance"
      blocking: true
      phases: [5, 6]
      tools: ["semgrep", "bandit", "npm-audit", "sonarqube"]
      severity_threshold: "medium"

    - name: "performance_check"
      description: "Performance regression detection and optimization"
      blocking: false
      phases: [4, 6]
      baseline_required: true
      regression_threshold: 10  # percent

# Environment Configurations
environments:
  development:
    log_level: "DEBUG"
    cache_enabled: false
    strict_mode: false
    hooks:
      enabled: true
      enforcement_level: "advisory"
    quality_gates:
      strict_mode: false
      auto_fix: true

  testing:
    log_level: "INFO"
    cache_enabled: true
    strict_mode: false
    hooks:
      enabled: true
      enforcement_level: "warning"
    quality_gates:
      strict_mode: true
      auto_fix: true

  production:
    log_level: "WARN"
    cache_enabled: true
    strict_mode: true
    hooks:
      enabled: true
      enforcement_level: "strict"
    quality_gates:
      strict_mode: true
      auto_fix: false

# Logging Configuration
logging:
  enabled: true
  level: "INFO"  # DEBUG | INFO | WARN | ERROR
  file: "/tmp/claude-enhancer.log"
  rotate: true
  max_size: "50MB"
  max_files: 10

  formats:
    console: "[{timestamp}] {level}: {message}"
    file: "[{timestamp}] [{level}] {module}:{function}:{line}: {message}"
    audit: "[{timestamp}] {user} {action} {resource} {result} {details}"

  categories:
    agent_execution: "INFO"
    hook_execution: "DEBUG"
    quality_gates: "WARN"
    security: "ERROR"
    performance: "INFO"
    workflow: "INFO"

# Performance Configuration
performance:
  cache:
    enabled: true
    ttl: 600  # seconds
    max_entries: 2000
    strategy: "lru"
    compression: true

  parallel_execution:
    max_concurrent_agents: 10
    timeout: 30000  # milliseconds
    retry_attempts: 3
    backoff_strategy: "exponential"
    circuit_breaker: true

  monitoring:
    track_agent_performance: true
    track_hook_execution: true
    generate_reports: true
    real_time_metrics: true
    alert_thresholds:
      agent_timeout: 30000
      hook_timeout: 10000
      quality_gate_failure: 3
      memory_usage: 80  # percent

# Security Configuration
security:
  validation:
    enabled: true
    strict_mode: true

  encryption:
    config_encryption: false  # For development
    log_encryption: false
    sensitive_data_masking: true

  allowed_operations:
    - "read_config"
    - "write_config"
    - "validate_config"
    - "load_environment"
    - "execute_hooks"
    - "run_quality_gates"
    - "track_metrics"
    - "generate_reports"

  restricted_paths:
    - "/etc/"
    - "/root/"
    - "~/.ssh/"
    - "/var/secrets/"
    - "/proc/"

  environment_variables:
    allow_override: true
    prefix: "CLAUDE_ENHANCER_"
    required_vars: ["CLAUDE_ENHANCER_ENV", "CLAUDE_ENHANCER_MODE"]

# Integration Configuration
integrations:
  git_hooks:
    enabled: true
    auto_install: false  # Manual installation preferred for security
    hooks: ["pre-commit", "commit-msg", "pre-push"]
    custom_messages: true

  claude_code:
    enabled: true
    override_defaults: true
    priority: 100
    custom_prompts: true

  external_tools:
    enabled: true
    timeout: 15000
    tools:
      linters: ["eslint", "pylint", "golangci-lint", "flake8"]
      formatters: ["prettier", "black", "gofmt", "autopep8"]
      security: ["semgrep", "bandit", "gosec", "safety"]
      testing: ["jest", "pytest", "go test", "mocha"]
      performance: ["lighthouse", "ab", "wrk"]

# Smart Document Loading Configuration
smart_loading:
  enabled: true
  max_token_budget: 25000
  strategy: "intelligent"  # conservative | balanced | intelligent | aggressive

  core_documents:
    - path: "CLAUDE.md"
      priority: 0
      estimated_tokens: 2500
      always_load: true

  conditional_documents:
    - path: ".claude/ARCHITECTURE/GROWTH-STRATEGY.md"
      priority: 1
      estimated_tokens: 6000
      triggers:
        keywords: ["新功能", "new feature", "添加", "add", "feature", "功能"]
        task_types: ["feature_development", "new_feature"]
        phases: [2, 3]

  loading_strategy:
    token_overflow_strategy: "prioritize_critical"
    cache_loaded_documents: true
    cache_duration_minutes: 60
    auto_detect_task_type: true
    show_loading_plan: true

# Notification Configuration
notifications:
  enabled: true
  formats: ["emoji", "detailed"]

  channels:
    console: true
    file: true
    webhook: false

  events:
    on_block: true
    on_warning: true
    on_success: true
    on_error: true
    on_phase_complete: true
    on_workflow_complete: true
    on_quality_gate_fail: true

  templates:
    block: "🚫 {message} - {reason}"
    warning: "⚠️ {message}"
    success: "✅ {message}"
    error: "🚨 {message}"
    phase_complete: "📋 Phase {phase}: {phase_name} completed"
    workflow_complete: "🎉 Workflow completed successfully!"

# Whitelist Configuration
whitelist:
  operations:
    - "rollback"
    - "hotfix"
    - "emergency"
    - "config_reload"
    - "debug"
    - "maintenance"

  paths:
    - "*.md"
    - "*/test/*"
    - "*/tests/*"
    - "*/docs/*"
    - "*/config/*"
    - "*/scripts/*"
    - "*.json"
    - "*.yaml"
    - "*.yml"

  task_types:
    - "documentation"
    - "emergency_fix"
    - "config_update"
    - "maintenance"

  file_extensions:
    - ".md"
    - ".txt"
    - ".json"
    - ".yaml"
    - ".yml"
    - ".log"

# Custom Rules System
custom_rules:
  enabled: true
  file: ".claude/config/custom_rules.yaml"

  builtin_rules:
    require_tests:
      enabled: true
      pattern: ".*\\.(js|ts|py|go|java)$"
      action: "require_test_file"
      description: "Require test files for new code"

    security_keywords:
      enabled: true
      pattern: "(password|secret|key|token|auth|login)"
      action: "security_review"
      description: "Flag security-sensitive changes"

    performance_critical:
      enabled: true
      pattern: "(database|query|cache|performance|optimization)"
      action: "performance_review"
      description: "Require performance review for critical changes"

# Configuration Schema Validation
schema:
  validation:
    enabled: true
    strict: true
    on_load: true
    on_change: true
    schema_file: ".claude/config/schemas/config_schema.yaml"

  required_sections:
    - "metadata"
    - "system"
    - "workflow"
    - "agents"
    - "task_types"
    - "hooks"
    - "quality_gates"

# Backward Compatibility and Migration
compatibility:
  version: "3.0"
  auto_migrate: true

  legacy_configs:
    - path: ".claude/settings.json"
      format: "json"
      mapping: "claude_code_hooks"
      deprecated: true
      backup: true

    - path: ".claude/config/main.yaml"
      format: "yaml"
      mapping: "workflow_config"
      deprecated: true
      backup: true

    - path: ".claude/config/unified_main.yaml"
      format: "yaml"
      mapping: "comprehensive_config"
      deprecated: true
      backup: true

    - path: ".claude/smart_loading_config.yaml"
      format: "yaml"
      mapping: "smart_loading"
      deprecated: true
      backup: true

# Advanced Features
features:
  auto_phase_detection: true
  intelligent_agent_selection: true
  adaptive_quality_gates: true
  performance_optimization: true
  security_enhancement: true
  compliance_tracking: true
  workflow_analytics: true
  predictive_analysis: true
  real_time_monitoring: true
  auto_documentation: true

# Metrics and Analytics
metrics:
  enabled: true
  collection_interval: 60  # seconds
  retention_days: 30

  tracked_metrics:
    - agent_execution_time
    - hook_execution_time
    - quality_gate_success_rate
    - phase_completion_time
    - workflow_success_rate
    - error_rates
    - performance_metrics

  dashboard:
    enabled: true
    port: 3001
    real_time_updates: true

# Disaster Recovery
disaster_recovery:
  enabled: true
  backup_frequency: "daily"
  backup_retention: 30  # days
  backup_location: ".claude/config/backups/"

  recovery_procedures:
    config_corruption: "restore_from_backup"
    hook_failure: "fallback_to_safe_mode"
    quality_gate_failure: "manual_override_available"

# Health Checks
health_checks:
  enabled: true
  interval: 300  # seconds

  checks:
    - name: "config_validity"
      description: "Validate configuration structure and values"

    - name: "hook_availability"
      description: "Verify all hooks are accessible and executable"

    - name: "quality_gate_readiness"
      description: "Ensure quality gate tools are available"

    - name: "agent_registry"
      description: "Validate agent definitions and availability"

# End of Unified Configuration