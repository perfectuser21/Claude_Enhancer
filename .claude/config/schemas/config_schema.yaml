# Claude Enhancer Configuration Schema
# JSON Schema definition for configuration validation

$schema: "http://json-schema.org/draft-07/schema#"
title: "Claude Enhancer Configuration Schema"
description: "Schema validation for Claude Enhancer unified configuration system"
version: "1.0.0"

type: object
required:
  - metadata
  - system
  - workflow
  - agents
  - task_types

properties:
  metadata:
    type: object
    required: [version, name, description, last_updated, schema_version]
    properties:
      version:
        type: string
        pattern: "^\\d+\\.\\d+\\.\\d+$"
      name:
        type: string
        minLength: 1
      description:
        type: string
      last_updated:
        type: string
        format: date-time
      schema_version:
        type: string
        pattern: "^\\d+\\.\\d+$"

  system:
    type: object
    required: [name, mode, version]
    properties:
      name:
        type: string
        minLength: 1
      mode:
        type: string
        enum: [advisory, warning, enforcement]
      version:
        type: string
        pattern: "^\\d+\\.\\d+\\.\\d+$"
      description:
        type: string

  workflow:
    type: object
    required: [phases]
    properties:
      phases:
        type: object
        patternProperties:
          "^phase_[0-7]$":
            type: object
            required: [name, description, required]
            properties:
              name:
                type: string
                minLength: 1
              description:
                type: string
              required:
                type: boolean
              agents_min:
                type: integer
                minimum: 1
                maximum: 20
              agents_max:
                type: integer
                minimum: 1
                maximum: 20
              strategy:
                type: string
                enum: ["3-4-6", "4-6-8", "6-8-10"]
              execution_mode:
                type: string
                enum: [parallel, sequential, mixed]
              hooks:
                type: array
                items:
                  type: string
              quality_gates:
                type: boolean

  agents:
    type: object
    required: [strategy, execution, selection]
    properties:
      strategy:
        type: object
        required: [simple_tasks, standard_tasks, complex_tasks]
        properties:
          simple_tasks:
            $ref: "#/definitions/agentStrategy"
          standard_tasks:
            $ref: "#/definitions/agentStrategy"
          complex_tasks:
            $ref: "#/definitions/agentStrategy"

      execution:
        type: object
        required: [mode, enforce_parallel, timeout]
        properties:
          mode:
            type: string
            enum: [parallel, sequential, mixed]
          enforce_parallel:
            type: boolean
          warn_sequential:
            type: boolean
          block_on_violation:
            type: boolean
          timeout:
            type: integer
            minimum: 1000
            maximum: 300000

      selection:
        type: object
        properties:
          auto_detect_task:
            type: boolean
          suggest_combinations:
            type: boolean
          enforce_minimum:
            type: boolean
          show_recommendations:
            type: boolean

  task_types:
    type: object
    patternProperties:
      "^[a-z_]+$":
        type: object
        required: [keywords, required_agents, minimum_count]
        properties:
          keywords:
            type: array
            items:
              type: string
            minItems: 1
          required_agents:
            type: array
            items:
              type: string
            minItems: 1
          minimum_count:
            type: integer
            minimum: 1
            maximum: 20
          complexity:
            type: string
            enum: [simple, standard, complex]
          test_requirements:
            type: array
            items:
              type: string

  hooks:
    type: object
    properties:
      enabled:
        type: boolean
      enforcement_level:
        type: string
        enum: [advisory, warning, strict]
      pre_tool_use:
        type: array
        items:
          $ref: "#/definitions/hookDefinition"
      user_prompt_submit:
        type: array
        items:
          $ref: "#/definitions/hookDefinition"
      post_tool_use:
        type: array
        items:
          $ref: "#/definitions/hookDefinition"

  quality_gates:
    type: object
    properties:
      enabled:
        type: boolean
      strict_mode:
        type: boolean
      checks:
        type: array
        items:
          type: object
          required: [name, description, blocking]
          properties:
            name:
              type: string
              minLength: 1
            description:
              type: string
            blocking:
              type: boolean
            threshold:
              type: number

  environments:
    type: object
    patternProperties:
      "^(development|testing|production)$":
        type: object
        properties:
          log_level:
            type: string
            enum: [DEBUG, INFO, WARN, ERROR]
          cache_enabled:
            type: boolean
          performance_monitoring:
            type: boolean

  logging:
    type: object
    properties:
      enabled:
        type: boolean
      level:
        type: string
        enum: [DEBUG, INFO, WARN, ERROR]
      file:
        type: string
      rotate:
        type: boolean
      max_size:
        type: string
        pattern: "^\\d+[KMGT]?B$"
      max_files:
        type: integer
        minimum: 1
        maximum: 100

  performance:
    type: object
    properties:
      cache:
        type: object
        properties:
          enabled:
            type: boolean
          ttl:
            type: integer
            minimum: 1
            maximum: 86400
          max_entries:
            type: integer
            minimum: 1

      parallel_execution:
        type: object
        properties:
          max_concurrent_agents:
            type: integer
            minimum: 1
            maximum: 50
          timeout:
            type: integer
            minimum: 1000
            maximum: 600000
          retry_attempts:
            type: integer
            minimum: 0
            maximum: 10

  security:
    type: object
    properties:
      validation:
        type: object
        properties:
          enabled:
            type: boolean
          strict_mode:
            type: boolean

      allowed_operations:
        type: array
        items:
          type: string

      restricted_paths:
        type: array
        items:
          type: string

      environment_variables:
        type: object
        properties:
          allow_override:
            type: boolean
          prefix:
            type: string

  integrations:
    type: object
    properties:
      git_hooks:
        type: object
        properties:
          enabled:
            type: boolean
          auto_install:
            type: boolean
          hooks:
            type: array
            items:
              type: string
              enum: [pre-commit, commit-msg, pre-push, post-merge]

      claude_code:
        type: object
        properties:
          enabled:
            type: boolean
          override_defaults:
            type: boolean
          priority:
            type: integer
            minimum: 1
            maximum: 1000

  notifications:
    type: object
    properties:
      enabled:
        type: boolean
      formats:
        type: array
        items:
          type: string
          enum: [emoji, plain, detailed]
      events:
        type: object
        properties:
          on_block:
            type: boolean
          on_warning:
            type: boolean
          on_success:
            type: boolean
          on_error:
            type: boolean

  whitelist:
    type: object
    properties:
      operations:
        type: array
        items:
          type: string
      paths:
        type: array
        items:
          type: string
      task_types:
        type: array
        items:
          type: string

  custom_rules:
    type: object
    properties:
      enabled:
        type: boolean
      file:
        type: string

definitions:
  agentStrategy:
    type: object
    required: [agent_count, duration, description]
    properties:
      agent_count:
        type: integer
        minimum: 1
        maximum: 20
      duration:
        type: string
        pattern: "^\\d+-\\d+ minutes$"
      description:
        type: string
        minLength: 1

  hookDefinition:
    type: object
    required: [name, command, description, timeout, enabled]
    properties:
      name:
        type: string
        minLength: 1
      command:
        type: string
        minLength: 1
      description:
        type: string
      timeout:
        type: integer
        minimum: 100
        maximum: 60000
      enabled:
        type: boolean
      matcher:
        type: string
      strict:
        type: boolean

# Environment-specific schema extensions
oneOf:
  - properties:
      environment:
        const: "development"
    # Development can have relaxed constraints

  - properties:
      environment:
        const: "testing"
    # Testing requires specific test configurations

  - properties:
      environment:
        const: "production"
    # Production requires strict settings
    required:
      - system
    properties:
      system:
        properties:
          mode:
            const: "enforcement"
        required: [mode]