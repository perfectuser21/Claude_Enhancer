# Perfect21 Git Hooks 配置文件
# 基于2024年最佳实践的现代化配置驱动架构

# 全局配置
global:
  project_name: "Perfect21"
  version: "2.1.0"
  parallel_execution: true
  max_workers: 4
  timeout: 300  # 5分钟超时
  log_level: "INFO"

# Hook组配置
hook_groups:
  essential:
    description: "必需的核心hooks"
    hooks:
      - pre-commit
      - commit-msg
      - pre-push

  standard:
    description: "标准开发hooks"
    hooks:
      - pre-commit
      - commit-msg
      - post-commit
      - pre-push
      - post-checkout

  advanced:
    description: "高级开发hooks"
    hooks:
      - pre-commit
      - commit-msg
      - post-commit
      - prepare-commit-msg
      - pre-push
      - post-checkout
      - post-merge
      - pre-rebase

  complete:
    description: "完整的企业级hooks"
    hooks:
      - pre-commit
      - commit-msg
      - post-commit
      - prepare-commit-msg
      - pre-push
      - post-checkout
      - post-merge
      - post-rewrite
      - pre-rebase
      - pre-auto-gc
      - applypatch-msg
      - pre-applypatch
      - post-applypatch

# Hook详细配置
hooks:
  # 提交工作流hooks
  pre-commit:
    enabled: true
    category: "commit_workflow"
    priority: "critical"
    parallel: true
    timeout: 120
    agent: "auto"  # 自动根据分支类型选择Agent
    description: "提交前代码质量检查"
    triggers:
      - "code_quality"
      - "security_scan"
      - "linting"
      - "format_check"
    plugins:
      - commit_quality
      - security_scan
    branch_rules:
      main:
        agent: "@orchestrator"
        strict_mode: true
        required_checks:
          - code_review
          - security_scan
          - test_suite
      feature/*:
        agent: "@code-reviewer"
        strict_mode: false
        required_checks:
          - code_review
          - basic_tests
      hotfix/*:
        agent: "@test-engineer"
        strict_mode: true
        required_checks:
          - critical_tests
          - security_scan

  commit-msg:
    enabled: true
    category: "commit_workflow"
    priority: "high"
    parallel: false
    timeout: 30
    agent: "@business-analyst"
    description: "提交消息格式验证"
    triggers:
      - "message_format"
      - "issue_linking"
      - "conventional_commits"
    plugins:
      - message_validator
    rules:
      format: "conventional"  # conventional, custom, free
      max_length: 72
      require_issue_link: false
      allowed_types:
        - feat
        - fix
        - docs
        - style
        - refactor
        - test
        - chore

  post-commit:
    enabled: true
    category: "commit_workflow"
    priority: "low"
    parallel: true
    timeout: 60
    agent: "@devops-engineer"
    description: "提交后通知和统计"
    triggers:
      - "notifications"
      - "metrics"
      - "backup"
    plugins:
      - notification_sender
      - metrics_collector

  prepare-commit-msg:
    enabled: false
    category: "commit_workflow"
    priority: "medium"
    parallel: false
    timeout: 30
    agent: "@business-analyst"
    description: "自动生成提交消息模板"
    triggers:
      - "template_generation"
      - "issue_integration"
    plugins:
      - message_template

  # 推送工作流hooks
  pre-push:
    enabled: true
    category: "push_workflow"
    priority: "critical"
    parallel: true
    timeout: 300
    agent: "auto"
    description: "推送前完整验证"
    triggers:
      - "test_suite"
      - "integration_tests"
      - "build_verification"
    plugins:
      - test_runner
      - build_validator
    branch_rules:
      main:
        agent: "@orchestrator"
        required_checks:
          - full_test_suite
          - security_scan
          - performance_tests
          - integration_tests
      develop:
        agent: "@test-engineer"
        required_checks:
          - unit_tests
          - integration_tests
      feature/*:
        agent: "@code-reviewer"
        required_checks:
          - basic_tests
          - lint_check

  # 分支工作流hooks
  post-checkout:
    enabled: true
    category: "branch_workflow"
    priority: "medium"
    parallel: true
    timeout: 120
    agent: "@devops-engineer"
    description: "分支切换后环境配置"
    triggers:
      - "environment_setup"
      - "dependency_check"
      - "config_update"
    plugins:
      - environment_manager
      - dependency_checker

  post-merge:
    enabled: true
    category: "branch_workflow"
    priority: "high"
    parallel: true
    timeout: 180
    agent: "@test-engineer"
    description: "合并后集成测试"
    triggers:
      - "integration_tests"
      - "conflict_resolution"
      - "cleanup"
    plugins:
      - integration_tester
      - conflict_resolver

  post-rewrite:
    enabled: false
    category: "branch_workflow"
    priority: "low"
    parallel: true
    timeout: 60
    agent: "@devops-engineer"
    description: "重写操作后清理"
    triggers:
      - "cleanup"
      - "backup_update"
    plugins:
      - cleanup_manager

  # 高级hooks
  pre-rebase:
    enabled: false
    category: "advanced"
    priority: "medium"
    parallel: false
    timeout: 60
    agent: "@code-reviewer"
    description: "变基前冲突预检查"
    triggers:
      - "conflict_detection"
      - "history_validation"
    plugins:
      - conflict_detector

  # 维护hooks
  pre-auto-gc:
    enabled: false
    category: "maintenance"
    priority: "low"
    parallel: false
    timeout: 120
    agent: "@devops-engineer"
    description: "垃圾回收前备份"
    triggers:
      - "backup_creation"
      - "cleanup_verification"
    plugins:
      - backup_manager

  # 补丁工作流hooks
  applypatch-msg:
    enabled: false
    category: "patch_workflow"
    priority: "medium"
    parallel: false
    timeout: 30
    agent: "@business-analyst"
    description: "补丁消息验证"
    triggers:
      - "patch_validation"
      - "message_check"
    plugins:
      - patch_validator

  pre-applypatch:
    enabled: false
    category: "patch_workflow"
    priority: "medium"
    parallel: true
    timeout: 120
    agent: "@code-reviewer"
    description: "应用补丁前检查"
    triggers:
      - "compatibility_check"
      - "code_review"
    plugins:
      - compatibility_checker

  post-applypatch:
    enabled: false
    category: "patch_workflow"
    priority: "medium"
    parallel: true
    timeout: 180
    agent: "@test-engineer"
    description: "应用补丁后测试"
    triggers:
      - "patch_testing"
      - "regression_check"
    plugins:
      - patch_tester

# 插件配置
plugins:
  commit_quality:
    enabled: true
    type: "built-in"
    config:
      max_line_length: 88
      check_imports: true
      check_docstrings: true

  security_scan:
    enabled: true
    type: "built-in"
    config:
      scan_dependencies: true
      check_secrets: true
      validate_permissions: true

  message_validator:
    enabled: true
    type: "built-in"
    config:
      enforce_conventional: true
      require_body: false
      max_subject_length: 72

  test_runner:
    enabled: true
    type: "built-in"
    config:
      test_command: "python -m pytest"
      coverage_threshold: 80
      parallel_jobs: 4

  notification_sender:
    enabled: false
    type: "external"
    config:
      webhook_url: ""
      slack_channel: ""
      email_recipients: []

# 环境配置
environments:
  development:
    hook_group: "standard"
    strict_mode: false
    skip_slow_hooks: true

  staging:
    hook_group: "advanced"
    strict_mode: true
    skip_slow_hooks: false

  production:
    hook_group: "complete"
    strict_mode: true
    skip_slow_hooks: false

# 集成配置
integrations:
  claude_agents:
    enabled: true
    base_path: "core/claude-code-unified-agents"
    agents_dir: ".claude/agents"

  version_manager:
    enabled: true
    auto_version_check: true
    require_version_consistency: true

  capability_discovery:
    enabled: true
    auto_discover_plugins: true
    scan_interval: 300  # 5分钟

# 默认激活的hook组
default_hook_group: "standard"

# 调试配置
debug:
  enabled: false
  verbose_logging: false
  dry_run: false
  timing_reports: true