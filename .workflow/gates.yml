# Workflow Gates v3 — 7 Phases Unified System
# Lockdown Mechanism Integration (v6.6)
# 更新：2025-10-20 - 7 Phases系统 + 锁定机制集成

meta:
  subagent_invocation: "Only main Claude Code agent may invoke sub-agents. Sub-agents MUST NOT invoke sub-agents."
  merge_strategy: "squash"              # main 分支一律 squash
  post_merge_healthcheck: true          # 合并后冒烟检查
  auto_rollback_on_health_fail: true    # 健康检查失败立即回滚上一 tag

  # Lockdown Mechanism Integration (NEW)
  core_verification:
    enabled: true
    hook: tools/verify-core-structure.sh
    blocking: true
    fail_mode: "soft"                   # 观测期7天，soft模式（记录但不阻止）
    strict_mode_start: "2025-10-27"     # 7天后自动切换到strict模式
    performance_budget_ms: 50

  # AI Self-Validation Settings
  pre_write_validation:
    enabled: true
    hook: .claude/hooks/quality/pre_write_validation.sh
    blocking: true
    performance_budget_ms: 100

# Quality Gate Thresholds (for hardened CI)
quality:
  quality_min: 85                       # Minimum quality score
  coverage_min: 70                      # Minimum coverage (hard block at Phase 3)
  coverage_block: true                  # true = hard block, false = warning only
  coverage_tolerance: 0.005             # ±0.5% tolerance for rounding errors
  required_signatures: 8                # Required GPG signatures for protected branches

# Parallel Limits - 7 Phases System
parallel_limits:
  Phase1: 4   # Discovery & Planning: 分析师+架构师+探索专家
  Phase2: 6   # Implementation: 多个模块并行实现
  Phase3: 8   # Testing: 最多并行测试任务
  Phase4: 6   # Review: 多维度审查
  Phase5: 4   # Release: 谨慎发布
  Phase6: 2   # Acceptance: 专注验收
  Phase7: 3   # Closure: 清理和归档

parallel_autotune:
  success_streak_add: 2    # 连续两次一次过，上限 +2（不超过阶段限额）
  fail_streak_sub: 2       # 连续两次 gate 失败，上限 -2（不低于2）

test_depth:
  pre_push: ["unit", "boundary", "smoke"]   # push 前跑的集
  nightly_ci: ["integration", "contract"]   # 夜间 CI 额外跑

phase_order: [Phase1, Phase2, Phase3, Phase4, Phase5, Phase6, Phase7]

# Pre-Tool Quality Gates (AI Self-Validation)
pre_tool_gates:
  Write:
    enabled: true
    validations:
      - name: syntax_check
        hook: .claude/hooks/quality/pre_write_validation.sh
        blocking: true
        timeout_ms: 100
      - name: security_scan
        description: "Scan for hardcoded secrets and vulnerabilities"
        blocking: true
      - name: core_structure_check
        description: "Verify core structure not tampered (7 Phases/97 checkpoints)"
        hook: tools/verify-core-structure.sh
        blocking: true  # Will be soft for 7 days
        timeout_ms: 50
      - name: test_existence
        description: "Verify test files exist for source files"
        blocking: false  # Warning only
        exclude_patterns:
          - ".temp/**"
          - "test/**"
          - "**/*.test.*"
          - "**/*.spec.*"

  Edit:
    enabled: true
    validations:
      - name: syntax_check
        hook: .claude/hooks/quality/pre_write_validation.sh
        blocking: true
        timeout_ms: 100
      - name: security_scan
        blocking: true
      - name: core_structure_check
        hook: tools/verify-core-structure.sh
        blocking: true
        timeout_ms: 50

phases:
  # ═══════════════════════════════════════════════════════════
  # Phase 1: Discovery & Planning（探索与规划）- 33检查点
  # ═══════════════════════════════════════════════════════════
  Phase1:
    name: "Discovery & Planning - 探索与规划"
    description: "理解问题 + 技术探索 + 影响评估 + 架构规划"
    checkpoint_count: 33
    sub_phases:
      - "1.1 Branch Check (5检查点)"
      - "1.2 Requirements Discussion (5检查点)"
      - "1.3 Technical Discovery (8检查点)"
      - "1.4 Impact Assessment (3检查点)"
      - "1.5 Architecture Planning (12检查点)"

    allow_paths:
      - "docs/P2_DISCOVERY.md"
      - "docs/ACCEPTANCE_CHECKLIST.md"
      - "docs/PLAN.md"
      - "docs/**"
      - ".workflow/impact_assessments/**"
      - ".gates/**"
      - ".phase/**"
      - "experiments/**"

    must_produce:
      - "docs/P2_DISCOVERY.md (>300行): 可行性分析、技术spike、风险评估"
      - "docs/ACCEPTANCE_CHECKLIST.md: 定义'完成'的标准"
      - "docs/PLAN.md (>1000行): 任务分解、架构设计、回滚方案"
      - ".workflow/impact_assessments/current.json: Impact Assessment结果"
      - "完整的项目骨架规划"

    gates:
      - "P2_DISCOVERY.md包含可行性结论（GO/NO-GO/NEEDS-DECISION）"
      - "技术spike验证点 >= 2"
      - "风险评估完整（技术/业务/时间三个维度）"
      - "ACCEPTANCE_CHECKLIST.md存在且包含验收标准"
      - "PLAN.md三级标题齐全：任务清单/受影响文件/回滚方案"
      - "任务清单 >= 5条"
      - "Impact Assessment完成（影响半径分数计算）"
      - "无TODO占位符（防空壳检查）"

    on_pass:
      - "create: .gates/01.ok"
      - "set: .phase/current=Phase2"

    recommended_agents:
      - "research-specialist"
      - "architect-consultant"
      - "risk-assessor"
      - "product-analyst"
      - "system-architect"
      - "technical-writer"

  # ═══════════════════════════════════════════════════════════
  # Phase 2: Implementation（实现开发）- 15检查点
  # ═══════════════════════════════════════════════════════════
  Phase2:
    name: "Implementation - 实现开发"
    description: "编码实现、工具创建、Git配置"
    checkpoint_count: 15

    allow_paths:
      - "src/**"
      - "lib/**"
      - "utils/**"
      - ".claude/hooks/**"
      - "scripts/**"
      - "tools/**"
      - ".workflow/**"
      - ".github/workflows/**"
      - "CLAUDE.md"
      - "VERSION"
      - "CHANGELOG.md"
      - "docs/**"
      - ".gates/**"
      - ".phase/**"

    must_produce:
      - "可运行的代码实现"
      - "验证脚本（workflow_validator_v97.sh等）"
      - "工具脚本（local_ci.sh, verify-core-structure.sh等）"
      - "Git hooks配置"
      - "规范的Git commits"

    quality_gates:
      - name: pre_write_validation
        description: "AI validates code before writing"
        hook: .claude/hooks/quality/pre_write_validation.sh
        blocking: true
        checks:
          - syntax_validation
          - security_scan
          - test_existence
          - code_quality

      - name: core_structure_preservation
        description: "Verify core structure not degraded"
        hook: tools/verify-core-structure.sh
        blocking: true
        checks:
          - spec_fingerprint
          - checkpoint_count
          - quality_gates_count
          - hard_blocks_count

    gates:
      - "构建/编译通过"
      - "CHANGELOG.md更新"
      - "不得改动非白名单目录"
      - "所有pre-write验证通过"
      - "核心结构完整性验证通过（7 Phases/97检查点保持）"

    on_pass:
      - "create: .gates/02.ok"
      - "set: .phase/current=Phase3"

    recommended_agents:
      - "full-stack-developer"
      - "backend-architect"
      - "devops-engineer"
      - "database-specialist"
      - "security-engineer"
      - "code-reviewer"
      - "technical-writer"

  # ═══════════════════════════════════════════════════════════
  # Phase 3: Testing（质量验证）- 15检查点 🔒 质量门禁1
  # ═══════════════════════════════════════════════════════════
  Phase3:
    name: "Testing - 质量验证"
    description: "单元测试、集成测试、性能测试、BDD验收"
    checkpoint_count: 15
    quality_gate: 1  # 🔒 第一道质量门禁

    allow_paths:
      - "tests/**"
      - "test/**"
      - "acceptance/**"
      - "docs/TEST-REPORT.md"
      - "docs/COVERAGE-REPORT.md"
      - ".gates/**"
      - ".phase/**"

    must_produce:
      - "新增/改动测试 >= 2 条，且至少 1 条为边界/负例"
      - "docs/TEST-REPORT.md 列出覆盖的模块/函数与结果"
      - "测试覆盖率报告（≥70%）"
      - "性能benchmark结果"

    mandatory_checks:
      - name: static_checks
        description: "运行 scripts/static_checks.sh"
        command: "bash scripts/static_checks.sh"
        blocking: true
        checks:
          - "Shell语法验证（bash -n）"
          - "Shellcheck linting"
          - "代码复杂度检查（<150行/函数）"
          - "Hook性能测试（<2秒）"

    gates:
      - "pre-push: unit+boundary+smoke 必须绿"
      - "测试覆盖率 >= 70%（容差±0.5%）"
      - "报告存在并含覆盖点清单"
      - "关键路径测试覆盖"
      - "静态检查100%通过（bash -n + shellcheck）"
      - "代码复杂度合规（函数<150行）"
      - "Hook性能合规（<2秒执行）"
      - "无敏感信息泄露"

    on_pass:
      - "create: .gates/03.ok"
      - "create: .gates/gate1.passed"
      - "set: .phase/current=Phase4"

    on_fail:
      - "block: Phase4"
      - "message: 质量门禁1失败，必须修复所有测试问题后才能继续"

    recommended_agents:
      - "test-engineer"
      - "qa-specialist"
      - "performance-tester"
      - "security-tester"
      - "automation-engineer"
      - "technical-writer"

  # ═══════════════════════════════════════════════════════════
  # Phase 4: Review（代码审查）- 10检查点 🔒 质量门禁2
  # ═══════════════════════════════════════════════════════════
  Phase4:
    name: "Review - 代码审查"
    description: "人工审查、合并前审计、完整性验证"
    checkpoint_count: 10
    quality_gate: 2  # 🔒 第二道质量门禁

    allow_paths:
      - "src/**"
      - "docs/REVIEW.md"
      - "docs/SECURITY-AUDIT.md"
      - ".gates/**"
      - ".phase/**"

    must_produce:
      - "docs/REVIEW.md (>100行): 风格一致性/风险清单/回滚可行性"
      - "结论：APPROVE 或 REWORK: 原因"
      - "安全审计结果"
      - "性能分析报告"

    mandatory_checks:
      - name: pre_merge_audit
        description: "运行 scripts/pre_merge_audit.sh"
        command: "bash scripts/pre_merge_audit.sh"
        blocking: true
        checks:
          - "配置完整性（hooks注册、权限）"
          - "遗留问题扫描（TODO/FIXME）"
          - "垃圾文档检测（根目录≤7个）"
          - "版本完全一致性（5文件匹配）"
          - "代码模式一致性"
          - "文档完整性（REVIEW.md >3KB）"

      - name: manual_verification
        description: "人工验证项"
        blocking: true
        checks:
          - "逻辑正确性（IF判断、return语义）"
          - "代码一致性（统一实现模式）"
          - "Phase 1 checklist对照验证"

    gates:
      - "三段齐全（风格/风险/回滚）"
      - "存在明确结论（APPROVE/REWORK）"
      - "无Critical安全问题"
      - "无Critical质量问题"
      - "版本完全一致性验证通过"
      - "根目录文档≤7个"
      - "Phase 1 Acceptance Checklist ≥90%完成"
      - "核心结构完整性验证通过"

    on_pass:
      - "when: APPROVE"
      - "create: .gates/04.ok"
      - "create: .gates/gate2.passed"
      - "set: .phase/current=Phase5"

    on_fail:
      - "when: REWORK"
      - "block: Phase5"
      - "message: 质量门禁2失败，必须修复所有问题后才能发布"

    recommended_agents:
      - "code-reviewer"
      - "security-auditor"
      - "performance-analyst"
      - "technical-writer"

  # ═══════════════════════════════════════════════════════════
  # Phase 5: Release（发布监控）- 15检查点
  # ═══════════════════════════════════════════════════════════
  Phase5:
    name: "Release - 发布监控"
    description: "文档更新、版本发布、部署配置"
    checkpoint_count: 15

    allow_paths:
      - "README.md"
      - "CHANGELOG.md"
      - "VERSION"
      - "docs/**"
      - ".tags/**"
      - "tags/**"
      - ".gates/**"
      - ".phase/**"
      - "package.json"
      - ".claude/settings.json"
      - ".workflow/manifest.yml"

    must_produce:
      - "README.md 必含：安装、使用、注意事项 三段"
      - "CHANGELOG.md 版本号递增并写影响面"
      - "发布 tag 与 Release Notes"
      - "部署文档更新"

    gates:
      - "README 三段齐"
      - "CHANGELOG 版本号+影响面齐"
      - "版本一致性（5文件完全匹配）"
      - "根目录文档≤7个（规则1强制）"
      - "Phase 1 Acceptance Checklist ≥90%完成"
      - "打 tag 成功"
      - "post-merge healthcheck 通过（否则自动回滚上一 tag）"

    on_pass:
      - "create: .gates/05.ok"
      - "set: .phase/current=Phase6"

    recommended_agents:
      - "release-manager"
      - "technical-writer"
      - "devops-engineer"

  # ═══════════════════════════════════════════════════════════
  # Phase 6: Acceptance（验收确认）- 5检查点
  # ═══════════════════════════════════════════════════════════
  Phase6:
    name: "Acceptance - 验收确认"
    description: "AI生成验收报告 + 用户确认"
    checkpoint_count: 5

    allow_paths:
      - ".workflow/**"
      - "docs/**"
      - ".gates/**"
      - ".phase/**"

    must_produce:
      - ".workflow/VERIFICATION_REPORT.md: 验收报告"
      - ".workflow/verification_details.log: 详细验证日志"
      - "所有Checklist项验证完成"
      - "验收报告展示给用户"
      - "等待用户确认merge"

    gates:
      - id: "checklist_exists"
        name: "验收清单存在"
        check_command: "test -f docs/ACCEPTANCE_CHECKLIST.md"
        pass_condition:
          type: "exit_code"
          expected: 0
        on_fail: "Checklist不存在，请先生成Checklist"

      - id: "verify_all_items"
        name: "验证所有清单项"
        description: "AI对照Phase 1 Acceptance Checklist逐项验证"
        pass_condition:
          type: "manual"
          required: true
        on_fail: "有验收项未通过"

      - id: "report_generated"
        name: "验收报告已生成"
        check_command: "test -f .workflow/VERIFICATION_REPORT.md"
        pass_condition:
          type: "exit_code"
          expected: 0
        on_fail: "验收报告未生成"

      - id: "pass_rate_100"
        name: "通过率100%"
        description: "所有验收项必须通过，存在critical问题无法验收"
        pass_condition:
          type: "manual"
          required: true
        on_fail: "通过率未达到100%，需要修复失败项"

      - id: "user_confirmation"
        name: "用户确认"
        description: "AI说'我已完成所有验收项，请您确认'，等待用户说'没问题'"
        pass_condition:
          type: "manual"
          required: true
        on_fail: "等待用户确认"

    on_pass:
      - "create: .gates/06.ok"
      - "create: .workflow/WAITING_MERGE_CONFIRMATION"
      - "set: .phase/current=Phase7"
      - "display: .workflow/VERIFICATION_REPORT.md"
      - "prompt: 请查看验收报告，确认后回复'没问题'"

    recommended_agents:
      - "qa-specialist"
      - "test-engineer"
      - "technical-writer"

  # ═══════════════════════════════════════════════════════════
  # Phase 7: Closure（收尾合并）- 4检查点
  # ═══════════════════════════════════════════════════════════
  Phase7:
    name: "Closure - 收尾合并"
    description: "清理临时文件 + 最终验证 + 准备合并"
    checkpoint_count: 4

    allow_paths:
      - ".temp/**"
      - ".workflow/**"
      - "docs/**"
      - ".gates/**"
      - ".phase/**"

    must_produce:
      - "干净的.temp/目录（<10MB）"
      - "最终版本一致性验证通过"
      - "文档规范验证通过"
      - "merge-ready状态"

    mandatory_checks:
      - name: version_consistency_final
        description: "最终版本一致性验证"
        command: "bash scripts/check_version_consistency.sh"
        blocking: true

    gates:
      - ".temp/ 大小 < 10MB"
      - "版本完全一致性（5文件）"
      - "根目录文档≤7个"
      - "核心结构完整性验证通过"
      - "等待用户说'merge'才能合并"

    on_pass:
      - "create: .gates/07.ok"
      - "set: .phase/current=READY_TO_MERGE"
      - "prompt: 所有检查通过，等待您确认'merge'后合并到main"

    recommended_agents:
      - "qa-specialist"
      - "technical-writer"

# ═══════════════════════════════════════════════════════════
# Quality Gates Summary (新增完整定义)
# ═══════════════════════════════════════════════════════════
quality_gates:
  total_gates: 2

  gate1:
    phase: "Phase 3"
    name: "技术质量门禁"
    description: "自动化测试和静态检查，确保代码质量"
    mandatory_checks:
      - "bash scripts/static_checks.sh"
    blocking_conditions:
      - "任何语法错误"
      - "shellcheck警告"
      - "函数复杂度超标（>150行）"
      - "hook性能超标（>2秒）"
      - "测试覆盖率<70%"
    enforcement: "hard"  # 硬阻止，任何失败都阻止进入Phase 4

  gate2:
    phase: "Phase 4"
    name: "代码质量门禁"
    description: "人工审查和自动化审计，确保发布质量"
    mandatory_checks:
      - "bash scripts/pre_merge_audit.sh"
    blocking_conditions:
      - "存在critical安全问题"
      - "存在critical质量问题"
      - "版本不一致"
      - "根目录文档>7个"
      - "Phase 1 checklist完成度<90%"
    enforcement: "hard"  # 硬阻止，任何失败都阻止进入Phase 5

  code_standards:
    - "所有函数必须有注释"
    - "关键逻辑必须有单元测试"
    - "安全敏感代码必须审计"

  security_baseline:
    - "无SQL注入风险"
    - "无XSS漏洞"
    - "敏感信息加密存储"
    - "权限检查完整"

  performance_baseline:
    - "API响应时间 < 200ms (P95)"
    - "数据库查询 < 100ms (P95)"
    - "页面加载 < 3s"

# ═══════════════════════════════════════════════════════════
# Hard Blocks Summary (硬性阻止条件统计)
# ═══════════════════════════════════════════════════════════
hard_blocks:
  total_count: 8

  by_phase:
    Phase1: 1  # 分支检查失败
    Phase3: 2  # 语法错误 + shellcheck失败
    Phase4: 2  # critical问题 + 版本不一致
    Phase5: 2  # 文档规范 + checklist未完成
    Phase6: 1  # 用户未确认

# 自动回滚配置
rollback_triggers:
  - "健康检查失败"
  - "错误率 > 5%"
  - "响应时间 > 2x baseline"
  - "CPU使用率 > 90%"
  - "核心结构完整性验证失败"

# Validation Performance Tracking
performance_tracking:
  enabled: true
  log_path: .temp/quality_gates/performance.log
  alert_threshold_ms: 200
  metrics:
    - validation_duration
    - blocking_count
    - pass_rate
    - core_verification_time

# Reporting Configuration
reporting:
  enabled: true
  output_path: .temp/quality_gates/reports
  formats:
    - json
    - markdown
  summary_on_failure: true
  daily_summary: true

# 通知配置
notifications:
  on_gate_fail:
    - type: "log"
      path: ".workflow/logs/gate_failures.log"
  on_phase_complete:
    - type: "log"
      path: ".workflow/logs/phase_completion.log"
  on_rollback:
    - type: "log"
      path: ".workflow/logs/rollback.log"
    - type: "alert"
      severity: "high"
  on_core_structure_change:
    - type: "log"
      path: ".workflow/logs/core_structure_changes.log"
    - type: "alert"
      severity: "critical"
