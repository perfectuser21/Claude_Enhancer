name: Auto PR & Merge

on:
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'perf/**'
      - 'experiment/**'
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.gitignore'

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  auto-pr:
    name: Create/Update PR
    runs-on: ubuntu-latest
    outputs:
      pr-number: ${{ steps.pr.outputs.pr_number }}
      pr-created: ${{ steps.pr.outputs.pr_created }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Check if PR exists
        id: check-pr
        run: |
          PR_EXISTS=$(gh pr list --head "${{ github.ref_name }}" --base main --json number --jq '.[0].number' || echo "")
          if [[ -n "$PR_EXISTS" ]]; then
            echo "pr_exists=true" >> $GITHUB_OUTPUT
            echo "pr_number=$PR_EXISTS" >> $GITHUB_OUTPUT
          else
            echo "pr_exists=false" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: 📝 Generate PR body
        if: steps.check-pr.outputs.pr_exists == 'false'
        run: |
          # Use verification checklist if exists, otherwise use default
          if [[ -f "PR_DESCRIPTION_v6.0.md" ]]; then
            cp PR_DESCRIPTION_v6.0.md pr_body.md
          elif [[ -f "docs/VERIFICATION_CHECKLIST.md" ]]; then
            cp docs/VERIFICATION_CHECKLIST.md pr_body.md
          else
            cat > pr_body.md << 'EOF'
          ## 🚀 Automated PR - Claude Enhancer v6.0

          ### Changes
          - Branch: ${{ github.ref_name }}
          - Commit: ${{ github.sha }}

          ### Verification
          Run: `./scripts/verify_v6_positive.sh`

          ### Auto-merge
          This PR will automatically merge when all checks pass.

          ---
          🤖 Generated by Auto PR workflow
          EOF
          fi

      - name: 🎯 Create Pull Request
        if: steps.check-pr.outputs.pr_exists == 'false'
        id: pr
        run: |
          # Extract version for PR title
          VERSION=$(cat VERSION 2>/dev/null || echo "dev")

          # Determine PR title based on branch name
          BRANCH="${{ github.ref_name }}"
          case "$BRANCH" in
            feature/*)
              TITLE="feat(v$VERSION): ${BRANCH#feature/}"
              ;;
            bugfix/*)
              TITLE="fix(v$VERSION): ${BRANCH#bugfix/}"
              ;;
            perf/*)
              TITLE="perf(v$VERSION): ${BRANCH#perf/}"
              ;;
            *)
              TITLE="chore(v$VERSION): $BRANCH"
              ;;
          esac

          # Try to create PR (handle race condition where PR was created externally)
          PR_URL=$(gh pr create \
            --base main \
            --head "${{ github.ref_name }}" \
            --title "$TITLE" \
            --body-file pr_body.md \
            --label "auto-pr,v6" \
            2>&1) || {
              # Creation failed - check if PR now exists (race condition)
              echo "⚠️ PR creation failed, checking if PR exists..."
              EXISTING_PR=$(gh pr list --head "${{ github.ref_name }}" --base main --json number --jq '.[0].number' 2>/dev/null || echo "")

              if [[ -n "$EXISTING_PR" ]]; then
                echo "✅ Found existing PR #$EXISTING_PR (likely created manually during workflow)"
                echo "pr_number=$EXISTING_PR" >> $GITHUB_OUTPUT
                echo "pr_created=false" >> $GITHUB_OUTPUT
                echo "pr_exists=true" >> $GITHUB_OUTPUT
                exit 0
              else
                # Real error - PR doesn't exist and couldn't create
                echo "❌ Error: Failed to create PR and no existing PR found"
                echo "$PR_URL"
                exit 1
              fi
          }

          # Extract PR number from successful creation
          PR_NUMBER=$(echo "$PR_URL" | grep -oE '[0-9]+$')
          echo "pr_number=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "pr_created=true" >> $GITHUB_OUTPUT
          echo "✅ Created PR #$PR_NUMBER"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: 🔄 Update existing PR
        if: steps.check-pr.outputs.pr_exists == 'true'
        run: |
          PR_NUMBER="${{ steps.check-pr.outputs.pr_number }}"
          echo "✅ PR #$PR_NUMBER already exists, updating..."

          # Add a comment about the update
          gh pr comment $PR_NUMBER --body "🔄 Updated from commit ${{ github.sha }}"
        env:
          GH_TOKEN: ${{ github.token }}

  enable-automerge:
    name: Enable Auto-merge
    runs-on: ubuntu-latest
    needs: auto-pr
    if: always() && needs.auto-pr.outputs.pr-number

    steps:
      - name: 📥 Checkout
        uses: actions/checkout@v4

      - name: 🤖 Enable auto-merge
        run: |
          PR_NUMBER="${{ needs.auto-pr.outputs.pr-number }}"

          # Check if this is a manually created PR (from race condition handling)
          if [[ "${{ needs.auto-pr.outputs.pr-created }}" == "false" ]]; then
            echo "ℹ️ PR #$PR_NUMBER was created manually, skipping auto-merge setup"
            echo "💡 Auto-merge can be enabled manually with: gh pr merge $PR_NUMBER --auto --squash"
            exit 0
          fi

          echo "🔄 Enabling auto-merge for PR #$PR_NUMBER..."

          # Try to enable auto-merge (requires repo setting)
          gh pr merge $PR_NUMBER --auto --squash || {
            echo "⚠️ Auto-merge not available. Possible reasons:"
            echo "1. Repository setting 'Allow auto-merge' is disabled"
            echo "2. Required status checks haven't been configured"
            echo "3. Branch protection rules not set up"
            echo ""
            echo "Manual action required: merge PR #$PR_NUMBER when checks pass"
          }

          # Add auto-merge label for tracking
          gh pr edit $PR_NUMBER --add-label "auto-merge-enabled" || true
        env:
          GH_TOKEN: ${{ github.token }}

      - name: 📊 Report status
        if: always()
        run: |
          PR_NUMBER="${{ needs.auto-pr.outputs.pr-number }}"
          echo "📋 Summary for PR #$PR_NUMBER:"
          gh pr view $PR_NUMBER --json state,mergeable,mergeStateStatus,statusCheckRollup \
            --jq '. | "State: \(.state)\nMergeable: \(.mergeable)\nMerge Status: \(.mergeStateStatus)\nChecks: \(.statusCheckRollup | length) checks configured"'
        env:
          GH_TOKEN: ${{ github.token }}

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [auto-pr, enable-automerge]
    if: always()

    steps:
      - name: 📢 Final notification
        run: |
          if [[ "${{ needs.auto-pr.outputs.pr-created }}" == "true" ]]; then
            echo "✅ Successfully created PR #${{ needs.auto-pr.outputs.pr-number }}"
            echo "🔄 Auto-merge has been enabled"
            echo "⏳ Waiting for required checks to pass..."
            echo ""
            echo "📊 Monitor progress at:"
            echo "https://github.com/${{ github.repository }}/pull/${{ needs.auto-pr.outputs.pr-number }}"
          else
            echo "ℹ️ Updated existing PR #${{ needs.auto-pr.outputs.pr-number }}"
          fi

          echo ""
          echo "🎯 Next steps:"
          echo "1. Required checks will run automatically"
          echo "2. PR will auto-merge when all checks pass"
          echo "3. Tag will be created after merge (if auto-tag.yml is configured)"