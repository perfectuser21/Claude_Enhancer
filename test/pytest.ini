[tool:pytest]
# Pytest 配置文件
# 这个文件定义了所有测试的运行配置和标准

# 测试发现模式
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 测试目录
testpaths = test

# 最小版本要求
minversion = 7.0

# 输出配置
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --durations=10
    --cov=.
    --cov-report=html:test-results/coverage/html
    --cov-report=xml:test-results/coverage/coverage.xml
    --cov-report=term-missing
    --cov-fail-under=80
    --junitxml=test-results/junit/results.xml
    --html=test-results/report.html
    --self-contained-html

# 标记定义
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, with dependencies)
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Slow running tests (> 1 second)
    api: API endpoint tests
    database: Database related tests
    auth: Authentication and authorization tests
    validation: Input validation tests
    error_handling: Error handling tests
    edge_case: Edge case and boundary tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    manual: Tests that require manual intervention
    skip_ci: Tests to skip in CI environment

# 过滤警告
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::pytest.PytestUnraisableExceptionWarning

# 测试超时配置
timeout = 300
timeout_method = thread

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 覆盖率配置
[coverage:run]
source = .
omit = 
    */test/*
    */tests/*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*
    setup.py
    conftest.py
    */migrations/*
    */static/*
    */templates/*

[coverage:report]
# 覆盖率报告配置
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
skip_covered = False
precision = 2

[coverage:html]
directory = test-results/coverage/html

[coverage:xml]
output = test-results/coverage/coverage.xml
