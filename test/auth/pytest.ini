[tool:pytest]
# pytest configuration for authentication system tests

# Test discovery
testpaths = .
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers
markers =
    unit: Unit tests - fast, isolated tests of individual components
    integration: Integration tests - test component interactions
    security: Security tests - test security vulnerabilities and protections
    performance: Performance tests - test response times and throughput
    e2e: End-to-end tests - test complete user workflows
    slow: Slow running tests that may take more time
    smoke: Smoke tests - basic functionality validation

# Minimum version
minversion = 6.0

# Add options
addopts =
    -v
    --strict-markers
    --strict-config
    --tb=short
    --disable-warnings
    --cov=auth_system
    --cov-report=html:coverage_html
    --cov-report=term-missing
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --junitxml=test-results.xml

# Asyncio configuration
asyncio_mode = auto

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# -n auto uses all available CPU cores
# Use with pytest-xdist: pip install pytest-xdist
# addopts = ... -n auto

# Coverage configuration
[coverage:run]
source = auth_system
branch = True
omit =
    */tests/*
    */test_*
    */conftest.py
    */venv/*
    */env/*
    */.venv/*
    */migrations/*
    */settings/*
    */manage.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

show_missing = True
skip_covered = False
precision = 2

[coverage:html]
directory = coverage_html
title = Authentication System Test Coverage

[coverage:json]
output = coverage.json
pretty_print = True