# =============================================================================
# Monitoring Stack for Perfect21 Claude Enhancer
# Complete observability solution with Prometheus, Grafana, and ELK Stack
# =============================================================================

version: '3.8'

networks:
  monitoring:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/16

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local
  kibana_data:
    driver: local
  alertmanager_data:
    driver: local

services:
  # ==========================================================================
  # Prometheus - Metrics Collection
  # ==========================================================================
  prometheus:
    image: prom/prometheus:latest
    container_name: claude-enhancer-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./monitoring/alert_rules.yml:/etc/prometheus/alert_rules.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - monitoring
    depends_on:
      - node-exporter
      - cadvisor

  # ==========================================================================
  # Grafana - Metrics Visualization
  # ==========================================================================
  grafana:
    image: grafana/grafana:latest
    container_name: claude-enhancer-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SMTP_ENABLED=true
      - GF_SMTP_HOST=mailhog:1025
      - GF_SMTP_FROM_ADDRESS=grafana@claude-enhancer.dev
      - GF_SERVER_ROOT_URL=http://localhost:3001
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    networks:
      - monitoring
    depends_on:
      - prometheus

  # ==========================================================================
  # AlertManager - Alert Management
  # ==========================================================================
  alertmanager:
    image: prom/alertmanager:latest
    container_name: claude-enhancer-alertmanager
    restart: unless-stopped
    ports:
      - "9093:9093"
    volumes:
      - alertmanager_data:/alertmanager
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
    networks:
      - monitoring

  # ==========================================================================
  # Node Exporter - System Metrics
  # ==========================================================================
  node-exporter:
    image: prom/node-exporter:latest
    container_name: claude-enhancer-node-exporter
    restart: unless-stopped
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  # ==========================================================================
  # cAdvisor - Container Metrics
  # ==========================================================================
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: claude-enhancer-cadvisor
    restart: unless-stopped
    ports:
      - "8083:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - monitoring

  # ==========================================================================
  # Elasticsearch - Log Storage
  # ==========================================================================
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
    container_name: claude-enhancer-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    networks:
      - monitoring

  # ==========================================================================
  # Logstash - Log Processing
  # ==========================================================================
  logstash:
    image: docker.elastic.co/logstash/logstash:8.10.4
    container_name: claude-enhancer-logstash
    restart: unless-stopped
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./monitoring/logstash/config:/usr/share/logstash/config:ro
    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
    networks:
      - monitoring
    depends_on:
      - elasticsearch

  # ==========================================================================
  # Kibana - Log Visualization
  # ==========================================================================
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: claude-enhancer-kibana
    restart: unless-stopped
    ports:
      - "5601:5601"
    volumes:
      - kibana_data:/usr/share/kibana/data
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=claude-enhancer-kibana
    networks:
      - monitoring
    depends_on:
      - elasticsearch

  # ==========================================================================
  # Filebeat - Log Shipping
  # ==========================================================================
  filebeat:
    image: docker.elastic.co/beats/filebeat:8.10.4
    container_name: claude-enhancer-filebeat
    restart: unless-stopped
    user: root
    volumes:
      - ./monitoring/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - ELASTICSEARCH_HOST=elasticsearch:9200
      - KIBANA_HOST=kibana:5601
    networks:
      - monitoring
    depends_on:
      - elasticsearch
      - logstash

  # ==========================================================================
  # Jaeger - Distributed Tracing
  # ==========================================================================
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: claude-enhancer-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - monitoring

  # ==========================================================================
  # Redis Exporter - Redis Metrics
  # ==========================================================================
  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: claude-enhancer-redis-exporter
    restart: unless-stopped
    ports:
      - "9121:9121"
    environment:
      - REDIS_ADDR=redis://redis:6379
    networks:
      - monitoring

  # ==========================================================================
  # Postgres Exporter - Database Metrics
  # ==========================================================================
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: claude-enhancer-postgres-exporter
    restart: unless-stopped
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://claude_dev:dev_password_123@postgres:5432/claude_enhancer_dev?sslmode=disable
    networks:
      - monitoring

  # ==========================================================================
  # Blackbox Exporter - Endpoint Monitoring
  # ==========================================================================
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    container_name: claude-enhancer-blackbox-exporter
    restart: unless-stopped
    ports:
      - "9115:9115"
    volumes:
      - ./monitoring/blackbox.yml:/etc/blackbox_exporter/config.yml:ro
    networks:
      - monitoring

  # ==========================================================================
  # Loki - Log Aggregation
  # ==========================================================================
  loki:
    image: grafana/loki:latest
    container_name: claude-enhancer-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/local-config.yaml:ro
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  # ==========================================================================
  # Promtail - Log Collection for Loki
  # ==========================================================================
  promtail:
    image: grafana/promtail:latest
    container_name: claude-enhancer-promtail
    restart: unless-stopped
    volumes:
      - ./monitoring/promtail/config.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki