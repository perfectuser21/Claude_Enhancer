# =============================================================================
# Complete Kubernetes Deployment for Claude Enhancer Claude Enhancer
# Production-ready configuration with comprehensive monitoring and security
# =============================================================================

---
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: claude-enhancer
  labels:
    name: claude-enhancer
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/version: "2.0.0"

---
# ConfigMap for application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-enhancer-config
  namespace: claude-enhancer
data:
  CLAUDE_ENV: "production"
  LOG_LEVEL: "INFO"
  WORKERS: "4"
  DB_HOST: "postgres-service"
  DB_PORT: "5432"
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"

---
# Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: claude-enhancer-secrets
  namespace: claude-enhancer
type: Opaque
stringData:
  DB_PASSWORD: "your-secure-db-password"
  JWT_ACCESS_SECRET: "your-jwt-access-secret"
  JWT_REFRESH_SECRET: "your-jwt-refresh-secret"
  SECRET_KEY: "your-application-secret-key"
  REDIS_PASSWORD: "your-redis-password"

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-enhancer
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
    app.kubernetes.io/version: "2.0.0"
    app.kubernetes.io/component: backend
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer
  template:
    metadata:
      labels:
        app.kubernetes.io/name: claude-enhancer
        app.kubernetes.io/version: "2.0.0"
        app.kubernetes.io/component: backend
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claude-enhancer
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: claude-enhancer
        image: ghcr.io/claude-enhancer/claude-enhancer:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        envFrom:
        - configMapRef:
            name: claude-enhancer-config
        - secretRef:
            name: claude-enhancer-secrets
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
            ephemeral-storage: "1Gi"
          limits:
            memory: "1Gi"
            cpu: "1000m"
            ephemeral-storage: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 30
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - claude-enhancer
              topologyKey: kubernetes.io/hostname
      tolerations:
      - key: "node.kubernetes.io/unreachable"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30
      - key: "node.kubernetes.io/not-ready"
        operator: "Exists"
        effect: "NoExecute"
        tolerationSeconds: 30

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: claude-enhancer-service
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-healthcheck-path: "/health"
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: http
    protocol: TCP
    name: http
  selector:
    app.kubernetes.io/name: claude-enhancer

---
# ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: claude-enhancer
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: claude-enhancer-hpa
  namespace: claude-enhancer
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: claude-enhancer
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60

---
# PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: claude-enhancer-pdb
  namespace: claude-enhancer
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer

---
# NetworkPolicy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: claude-enhancer-netpol
  namespace: claude-enhancer
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: claude-enhancer
    ports:
    - protocol: TCP
      port: 5432  # PostgreSQL
    - protocol: TCP
      port: 6379  # Redis
  - to: []
    ports:
    - protocol: TCP
      port: 53   # DNS TCP
    - protocol: UDP
      port: 53   # DNS UDP
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 80   # HTTP

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: claude-enhancer-ingress
  namespace: claude-enhancer
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
  - hosts:
    - claude-enhancer.claude-enhancer.dev
    secretName: claude-enhancer-tls
  rules:
  - host: claude-enhancer.claude-enhancer.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: claude-enhancer-service
            port:
              number: 80

---
# ServiceMonitor for Prometheus
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: claude-enhancer-metrics
  namespace: claude-enhancer
  labels:
    app.kubernetes.io/name: claude-enhancer
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: claude-enhancer
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s