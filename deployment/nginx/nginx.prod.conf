# =============================================================================
# Nginx Production Configuration for Claude Enhancer 5.1
# High-performance load balancer with SSL, security, and monitoring
# =============================================================================

# Main context configuration
user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events block
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

# HTTP context
http {
    # ==========================================================================
    # Basic Settings
    # ==========================================================================
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer settings
    client_body_buffer_size 128k;
    client_max_body_size 10m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # ==========================================================================
    # Logging Configuration
    # ==========================================================================
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    log_format detailed '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for" '
                       'rt=$request_time uct="$upstream_connect_time" '
                       'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log detailed;

    # ==========================================================================
    # SSL Configuration
    # ==========================================================================
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # ==========================================================================
    # Security Headers
    # ==========================================================================
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'self';" always;

    # ==========================================================================
    # Rate Limiting
    # ==========================================================================
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=global:10m rate=100r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # ==========================================================================
    # Upstream Configuration
    # ==========================================================================
    upstream claude_enhancer_app {
        least_conn;
        server app:8080 max_fails=3 fail_timeout=30s weight=1;
        # Add more app instances for load balancing
        # server app2:8080 max_fails=3 fail_timeout=30s weight=1;
        # server app3:8080 max_fails=3 fail_timeout=30s weight=1;
        keepalive 32;
    }

    upstream prometheus {
        server prometheus:9090 max_fails=2 fail_timeout=30s;
    }

    upstream grafana {
        server grafana:3000 max_fails=2 fail_timeout=30s;
    }

    upstream kibana {
        server kibana:5601 max_fails=2 fail_timeout=30s;
    }

    # ==========================================================================
    # Caching Configuration
    # ==========================================================================
    proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m
                     max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m
                     max_size=100m inactive=10m use_temp_path=off;

    # ==========================================================================
    # Main Server Block (HTTPS)
    # ==========================================================================
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name claude-enhancer.your-domain.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;
        ssl_trusted_certificate /etc/nginx/ssl/chain.pem;

        # Security settings
        limit_conn conn_limit_per_ip 20;
        limit_req zone=global burst=50 nodelay;

        # =======================================================================
        # Static Files
        # =======================================================================
        location /static/ {
            alias /var/www/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Served-By "nginx";

            # Enable gzip compression
            gzip on;
            gzip_types text/css application/javascript application/json application/font-woff application/font-woff2 application/font-ttf;
        }

        location /favicon.ico {
            alias /var/www/static/favicon.ico;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # =======================================================================
        # Health Checks
        # =======================================================================
        location /health {
            proxy_pass http://claude_enhancer_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # No caching for health checks
            proxy_cache off;
            access_log off;
        }

        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # =======================================================================
        # API Routes
        # =======================================================================
        location /api/ {
            # Rate limiting for API
            limit_req zone=api burst=20 nodelay;

            proxy_pass http://claude_enhancer_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;

            # Cache configuration for GET requests
            proxy_cache api_cache;
            proxy_cache_methods GET HEAD;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 302 5m;
            proxy_cache_valid 404 1m;
            proxy_cache_bypass $http_cache_control;
            add_header X-Cache-Status $upstream_cache_status;
        }

        # =======================================================================
        # Authentication Routes (Special Rate Limiting)
        # =======================================================================
        location ~ ^/api/v1/(auth|login|register) {
            limit_req zone=auth burst=10 nodelay;

            proxy_pass http://claude_enhancer_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # No caching for auth endpoints
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # =======================================================================
        # Monitoring Endpoints
        # =======================================================================
        location /prometheus/ {
            auth_basic "Monitoring";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support for Grafana
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location /kibana/ {
            auth_basic "Logging";
            auth_basic_user_file /etc/nginx/.htpasswd;

            proxy_pass http://kibana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Increase buffer sizes for Kibana
            proxy_buffer_size 16k;
            proxy_buffers 8 16k;
        }

        # =======================================================================
        # Main Application (Frontend)
        # =======================================================================
        location / {
            try_files $uri $uri/ @app;

            # Cache static content
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Served-By "nginx";

                # Enable compression
                gzip on;
                gzip_types text/css application/javascript application/json;
            }
        }

        location @app {
            proxy_pass http://claude_enhancer_app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # =======================================================================
        # WebSocket Support
        # =======================================================================
        location /ws/ {
            proxy_pass http://claude_enhancer_app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeouts
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }

        # =======================================================================
        # Security Blocks
        # =======================================================================
        # Block common attack patterns
        location ~ /\.ht {
            deny all;
        }

        location ~ /\. {
            deny all;
        }

        location ~* \.(sql|bak|backup|log)$ {
            deny all;
        }

        # Block suspicious URLs
        location ~* (eval\(|union.*select|concat.*\(|system\(|shell_exec) {
            deny all;
            access_log /var/log/nginx/security.log;
        }
    }

    # ==========================================================================
    # HTTP to HTTPS Redirect
    # ==========================================================================
    server {
        listen 80;
        listen [::]:80;
        server_name claude-enhancer.your-domain.com;

        # Security headers even for redirects
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;

        # Redirect all HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # ==========================================================================
    # Metrics Server for Prometheus
    # ==========================================================================
    server {
        listen 9113;
        server_name localhost;

        location /metrics {
            stub_status on;
            access_log off;
            allow 172.0.0.0/8;
            allow 127.0.0.1;
            deny all;
        }
    }

    # ==========================================================================
    # Default Server (Catch-all)
    # ==========================================================================
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        server_name _;

        # Return 444 for unknown hosts
        return 444;
    }
}