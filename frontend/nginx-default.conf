# =============================================================================
# Default Server Configuration for Claude Enhancer Frontend
# React SPA with API proxy and optimized caching
# =============================================================================

upstream backend {
    server backend:8000;
    keepalive 32;
}

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # ==========================================================================
    # Security and Performance
    # ==========================================================================

    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ==========================================================================
    # API Proxy to Backend
    # ==========================================================================
    location /api/ {
        # Rate limiting for API calls
        limit_req zone=api burst=20 nodelay;

        # Proxy settings
        proxy_pass http://backend/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }

    # Special rate limiting for auth endpoints
    location /api/auth/login {
        limit_req zone=login burst=3 nodelay;
        proxy_pass http://backend/auth/login;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ==========================================================================
    # Static Assets with Caching
    # ==========================================================================

    # Cache static assets with hash in filename (immutable)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "HIT";

        # Optional: Enable gzip for text-based assets
        gzip_static on;

        # Security headers for assets
        add_header X-Content-Type-Options "nosniff";

        # Handle missing files gracefully
        try_files $uri =404;
    }

    # Cache with validation for other static content
    location ~* \.(html|json|xml|txt)$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
        add_header X-Cache-Status "REVALIDATE";

        try_files $uri =404;
    }

    # ==========================================================================
    # React Router (SPA) - Catch all routes
    # ==========================================================================
    location / {
        # Serve index.html for any route (React Router)
        try_files $uri $uri/ /index.html;

        # No caching for main HTML file
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-Content-Type-Options "nosniff";
        add_header X-XSS-Protection "1; mode=block";
    }

    # ==========================================================================
    # Health Check Endpoint
    # ==========================================================================
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # ==========================================================================
    # Error Pages
    # ==========================================================================
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;

    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # ==========================================================================
    # Monitoring and Metrics
    # ==========================================================================
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
}