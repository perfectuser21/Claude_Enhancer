# Perfect21 Pre-commit Configuration
# Modern tools integration for code quality

repos:
  # Python formatting and linting with Ruff (fast!)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.0
    hooks:
      - id: ruff
        args: [--fix]
      - id: ruff-format

  # Traditional Python tools (optional, Ruff covers most)
  - repo: https://github.com/psf/black
    rev: 23.9.1
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/PyCQA/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # Security scanning
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ['-ll', '-i', '-x', 'tests/']

  # Git leaks detection
  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.18.0
    hooks:
      - id: gitleaks

  # General file checks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
        args: [--allow-multiple-documents]
      - id: check-json
      - id: check-toml
      - id: check-xml
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: check-vcs-permalinks
      - id: destroyed-symlinks
      - id: detect-private-key
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: no-commit-to-branch
        args: ['--branch', 'main', '--branch', 'master']

  # JavaScript/TypeScript/JSON formatting
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.3
    hooks:
      - id: prettier
        types_or: [javascript, jsx, ts, tsx, json, markdown, yaml]

  # Shell script checks
  - repo: https://github.com/shellcheck-py/shellcheck-py
    rev: v0.9.0.6
    hooks:
      - id: shellcheck

  # Dockerfile linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker

  # Markdown linting
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.37.0
    hooks:
      - id: markdownlint
        args: ['--fix']

  # Type checking for Python (simplified)
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.1
    hooks:
      - id: mypy
        args: [--ignore-missing-imports, --no-strict-optional]

  # Perfect21 custom hooks
  - repo: local
    hooks:
      - id: perfect21-validation
        name: Perfect21 Validation
        entry: python3 /home/xx/dev/Perfect21/.claude/hooks/perfect21_core.py validate-pre-commit
        language: system
        always_run: true
        pass_filenames: false

      - id: perfect21-security
        name: Perfect21 Security Check
        entry: python3 /home/xx/dev/Perfect21/.claude/hooks/security_validator.py
        language: system
        files: \.(py|js|ts|sh)$

      - id: perfect21-test-check
        name: Perfect21 Test Verification
        entry: bash -c 'if [ -n "$(git diff --cached --name-only | grep -E "\.(py|js|ts)$")" ]; then echo "⚠️ Remember to run tests before committing!"; fi'
        language: system
        always_run: true
        pass_filenames: false

# Configuration
default_language_version:
  python: python3

default_stages: [pre-commit, pre-push]

fail_fast: false

# Exclude patterns
exclude: |
  (?x)^(
    .*\.min\.js|
    .*\.min\.css|
    node_modules/|
    venv/|
    \.git/|
    \.tox/|
    dist/|
    build/|
    .*\.egg-info/|
    __pycache__/|
    \.pytest_cache/|
    \.mypy_cache/
  )

# CI configuration
ci:
  autofix_prs: true
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit hooks

    for more information, see https://pre-commit.ci
  autoupdate_schedule: weekly
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  skip: []
  submodules: false